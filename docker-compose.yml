version: "3.3"
services:
  db-1:
    image: cockroachdb/cockroach
    command: start --advertise-host=db-1 --insecure
    expose:
      - 8080
      - 26257
    ports:
      - 26257:26257
      - 8080:8080
    networks:
      - net_roach
    volumes:
      - data_db-1:/cockroach/cockroach-data
  db-2:
    image: cockroachdb/cockroach
    command: start --advertise-host=db-2 --join=db-1:26257 --insecure
    networks:
      - net_roach
    volumes:
      - data_db-2:/cockroach/cockroach-data
  db-3:
    image: cockroachdb/cockroach
    command: start --advertise-host=db-3 --join=db-1:26257 --insecure
    networks:
      - net_roach
    volumes:
      - data_db-3:/cockroach/cockroach-data
  db-4:
    image: cockroachdb/cockroach
    command: start --advertise-host=db-4 --join=db-1:26257 --insecure
    networks:
      - net_roach
    volumes:
      - data_db-4:/cockroach/cockroach-data
  db-init:
    image: cockroachdb/cockroach
    environment:
      DB_HOST: db-1
      DB_USERNAME: cockroach
    networks:
      - net_roach
    volumes:
      - ./bin/init_db.sh:/init_db.sh
    entrypoint: "/bin/bash"
    command: /init_db.sh
    restart: on-failure
    depends_on:
      - db-1
  redis:
    image: redis
    command: ["redis-server", "--appendonly", "yes"]
    expose:
      - 6379
    ports:
      - 6379:6379
    sysctls:
      - net.core.somaxconn=1024
    volumes:
      - data_redis:/data
    networks:
      - net_backend
  server:
    build:
      context: .
      dockerfile: ./docker/Dockerfile-server
    image: subspace/server
    container_name: subspace-server
    ports:
      - 8081:8081
      - 9001:9001
    expose:
      - 8081
      - 9001
    environment:
      NODE_ENV: test
      PORT: 8081
      DB_USERNAME: cockroach
      DB_PASSWORD:
      DB_NAME: ss_test
      DB_HOST: db-1
      DB_PORT: 26257
      JWT_SECRET: yolo
    volumes:
      - .:/opt/subspace/
      - /opt/subspace/node_modules
      - /opt/subspace/packages/server/node_modules
    depends_on:
      - redis
    networks:
      - net_roach
      - net_backend
      - net_frontend
  client:
    build:
      context: .
      dockerfile: ./docker/Dockerfile-client
    image: subspace/client
    container_name: subspace-client
    ports:
      - 8082:8082
    expose:
      - 8082
    environment:
      SERVER_URL: http://subspace-server:8081
      PORT: 8082
      HOST: 0.0.0.0
    volumes:
      - .:/opt/subspace/
      - /opt/subspace/node_modules
      - /opt/subspace/packages/client/node_modules
    depends_on:
      - server
    networks:
      - net_frontend
      - net_backend
  portainer:
    image: portainer/portainer
    container_name: portainer
    command: --no-auth
    ports:
      - 9000:9000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - data_portainer:/data
    networks:
      - net_tools
volumes:
  data_db-1:
  data_db-2:
  data_db-3:
  data_db-4:
  data_redis:
  data_portainer:
networks:
  net_frontend:
  net_backend:
  net_roach:
  net_tools:

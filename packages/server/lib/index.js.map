{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./cfg/db.config.js","webpack:///./cfg/redis.config.js","webpack:///./src/auth/index.js","webpack:///./src/auth/jwt.js","webpack:///./src/auth/middleware.js","webpack:///./src/auth/strategy.js","webpack:///./src/auth/util.js","webpack:///./src/cache/index.js","webpack:///./src/cache/redimension.js","webpack:///./src/cache/spatial-index.js","webpack:///./src/data/index.js","webpack:///./src/index.js","webpack:///./src/modules/adjacent-bodies/index.js","webpack:///./src/modules/clients/index.js","webpack:///./src/modules/ships/index.js","webpack:///./src/modules/users/index.js","webpack:///./src/reducers.js","webpack:///./src/routers/auth.js","webpack:///./src/scheduler.js","webpack:///./src/server.js","webpack:///./src/store/index.js","webpack:///./src/util/async.js","webpack:///./src/util/hrtime.js","webpack:///external \"@babel/runtime/helpers/interopRequireDefault\"","webpack:///external \"@babel/runtime/helpers/interopRequireWildcard\"","webpack:///external \"@babel/runtime/helpers/objectSpread\"","webpack:///external \"@subspace/core\"","webpack:///external \"@web-udp/server\"","webpack:///external \"bcrypt\"","webpack:///external \"body-parser\"","webpack:///external \"dotenv\"","webpack:///external \"express\"","webpack:///external \"http\"","webpack:///external \"jsonwebtoken\"","webpack:///external \"passport\"","webpack:///external \"passport-jwt\"","webpack:///external \"passport-local\"","webpack:///external \"path\"","webpack:///external \"redis\"","webpack:///external \"redux\"","webpack:///external \"remote-redux-devtools\"","webpack:///external \"remotedev-server\"","webpack:///external \"sequelize\"","webpack:///external \"sequelize-cockroachdb\"","webpack:///external \"shortid\"","webpack:///external \"source-map-support/register\"","webpack:///external \"util-promisifyall\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","w","s","Sequelize","DB_USERNAME","DB_PASSWORD","DB_NAME","DB_HOST","DB_PORT","process","env","retry","match","ConnectionError","ConnectionRefusedError","ConnectionTimedOutError","OptimisticLockError","development","username","password","database","host","port","dialect","test","production","family","db","enableReadyCheck","retry_strategy","options","error","code","Error","total_retry_time","attempt","Math","min","async","user","Util","authenticate","_jwt","generateToken","token","verifyToken","_interopRequireWildcard","jwt","verify","JWT_SECRET","sign","expiresIn","_jsonwebtoken","_interopRequireDefault","JWT_EXPIRE_SECONDS","passport","auth","session","login","_passportJwt","_passportLocal","_util","_data","jwtOptions","jwtFromRequest","ExtractJwt","fromAuthHeaderAsBearerToken","secretOrKey","local","LocalStrategy","done","err","JwtStrategy","payload","User","findById","id","toJSON","model","findOne","where","comparePassword","_bcrypt","bcrypt","compare","SpatialIndex","client","key","hashkey","dimensions","precision","checkDimensions","values","length","encode","comb","reduce","a","x","bin","toString","padStart","split","zip","interleaved","flatten","arr","res","len","cur","Array","isArray","push","join","int10","buildElementString","encoded","appended","insert","ele","multi","zadd","hset","remove","zremAsync","removeById","hgetAsync","zrem","hdel","update","old","query","range","ordered","map","deltas","delta","exp","size","ranges","b","start","end","e","current","slice","notDone","rangeStart","rangeEnd","allResults","cb","batch","execAsync","zrangebylex","results","result","item","fields","skip","v","queryRaw","parseInt","_redis","_utilPromisifyall","_redimension","default","redis","RedisClient","Multi","config","createClient","create","_sequelizeCockroachdb","_db","NODE_ENV","configs","sequelize","define","STRING","beforeCreate","salt","genSalt","hash","encryptPassword","Body","angle","FLOAT","angularVelocity","positionX","positionY","velocityX","velocityY","width","height","ShipType","Ship","Inventory","ItemType","Item","Station","Hangar","hasOne","as","hasMany","belongsTo","remotedev","hostname","on","exit","state","initialAdjacentBodiesState","action","type","ADJACENT_BODIES_UPDATE","_objectSpread2","byUserId","adjacentBodies","index","store","next","Loop","LOOP_TICK","users","Users","getUsers","keys","userId","body","_core","getUserBody","Number","position","y","halfUpdateArea","then","bodyId","Async","queryAdjacentBodies","getState","updateAdjacentBodies","Physics","PHYSICS_ADD_BODY","PHYSICS_UPDATE_BODY","clientId","message","CLIENT_SEND","initialState","CLIENT_ADD","byId","[object Object]","CLIENT_REMOVE","getClient","nextState","udp","connections","subscribe","connection","metadata","console","send","JSON","stringify","Protocol","authTokenInvalidMessage","close","dispatch","_shortid","addClient","connectionId","closed","removeClient","messages","parse","data","clients","shipId","SHIP_LOAD","CoreShips","ship","loadShipSuccess","addShip","addBody","catch","loadShipFailure","SHIP_ADD","SHIP_UPDATE","CoreUsers","getUserByActiveShipId","Clients","getClientByUserId","shipUpdateMessage","sendClient","SHIP_LOAD_FAILURE","SHIP_LOAD_SUCCESS","USER_REGISTER","USER_LOAD","sendRate","sendStateUpdates","Hrtime","throttle","physics","loop","adjacentBodiesByUserId","AdjacentBodies","getAdjacentBodies","bodies","getBody","snapshotMessage","frame","userRegisterSuccessMessage","userRegisterFailureMessage","loadUserSuccess","addUser","activeShip","loadUserFailure","USER_ADD","USER_UPDATE","userUpdateMessage","USER_LOAD_FAILURE","USER_LOAD_SUCCESS","_adjacentBodies","_clients","_users","_ships","coreReducers","ships","_express","_middleware","router","express","Router","route","post","req","status","json","rate","nsPerTick","NS_PER_SEC","hrTimeStep","previous","hrtime","Promise","resolve","setTimeout","timeoutHandler","diff","sub","sum","setImmediate","add","_http","Udp","_passport","_bodyParser","_serverConfig","_store","_auth","_strategy","_auth2","TICK_RATE","SEND_RATE","PORT","tickRate","serverConfig","tick_rate","send_rate","app","server","createServer","Server","use","authRouter","configureStore","startLoop","log","sync","String","listen","main","scheduler","Scheduler","enhancers","_redux","applyMiddleware","createMiddleware","Ships","spatialIndex","rootReducer","combineReducers","reducers","createStore","composeEnhancers","_remoteReduxDevtools","_cache","_reducers","P2Driver","gravity","redisConfig","composeWithDevTools","actionsBlacklist","obj","all","promiseAllObject","zipObject","fn","prevResult","t0","args","t1","t2","t","require"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading wasm modules\n \tvar installedWasmModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// object with all compiled WebAssembly.Modules\n \t__webpack_require__.w = {};\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","const Sequelize = require(\"sequelize\")\n\nconst {\n  DB_USERNAME,\n  DB_PASSWORD,\n  DB_NAME,\n  DB_HOST,\n  DB_PORT,\n} = process.env\n\nconst retry = {\n  match: [\n    Sequelize.ConnectionError,\n    Sequelize.ConnectionRefusedError,\n    Sequelize.ConnectionTimedOutError,\n    Sequelize.OptimisticLockError,\n  ],\n}\n\nmodule.exports = {\n  development: {\n    username: \"cockroach\",\n    password: null,\n    database: \"ss_dev\",\n    host: \"127.0.0.1\",\n    port: 26257,\n    dialect: \"postgres\",\n    retry,\n  },\n  test: {\n    username: DB_USERNAME,\n    password: DB_PASSWORD,\n    database: DB_NAME,\n    host: DB_HOST,\n    port: DB_PORT,\n    dialect: \"postgres\",\n    retry,\n  },\n  production: {\n    username: DB_USERNAME,\n    password: DB_PASSWORD,\n    database: DB_NAME,\n    host: DB_HOST,\n    port: DB_PORT,\n    dialect: \"postgres\",\n    retry,\n  },\n}\n","export default {\n  port: 6379,\n  host: \"localhost\",\n  family: 4,\n  db: 0,\n  enableReadyCheck: true,\n  retry_strategy: options => {\n    if (options.error && options.error.code === \"ECONNREFUSED\") {\n      // End reconnecting on a specific error and flush all commands with\n      // a individual error\n      return new Error(\"The server refused the connection\")\n    }\n    if (options.total_retry_time > 1000 * 60 * 60) {\n      // End reconnecting after a specific timeout and flush all commands\n      // with a individual error\n      return new Error(\"Retry time exhausted\")\n    }\n    if (options.attempt > 10) {\n      // End reconnecting with built in error\n      return\n    }\n    // reconnect after\n    return Math.min(options.attempt * 100, 3000)\n  },\n}\n","// @flow\n\nimport type { User as UserModel } from \"@subspace/core\"\n\nimport { User } from \"../data\"\nimport * as Util from \"./util\"\nimport { generateToken, verifyToken } from \"./jwt\"\n\nexport type AuthClient = {\n  authenticate: (username: string, password: string) => string,\n  verify: string => Promise<UserModel>,\n}\n\nexport async function authenticate(\n  username: string,\n  password: string,\n) {\n  const user = await Util.authenticate(username, password)\n\n  return generateToken(user)\n}\n\nexport async function verify(token: string) {\n  return verifyToken(token)\n}\n","// @flow\n\nimport jwt from \"jsonwebtoken\"\nimport type { User } from \"@subspace/core\"\n\nconst { JWT_SECRET, JWT_EXPIRE_SECONDS } = process.env\n\nexport function verifyToken(token: string) {\n  return jwt.verify(token, JWT_SECRET)\n}\n\nexport function generateToken(user: User) {\n  return jwt.sign(user, JWT_SECRET, {\n    expiresIn: \"24h\",\n  })\n}\n","// @flow\n\nconst passport = require(\"passport\")\n\nexport const auth = passport.authenticate(\"jwt\", { session: false })\nexport const login = passport.authenticate(\"local\", {\n  session: false,\n})\n","// @flow\n\nimport { Strategy as JwtStrategy, ExtractJwt } from \"passport-jwt\"\nimport LocalStrategy from \"passport-local\"\n\nimport { authenticate } from \"./util\"\nimport { User } from \"../data\"\n\nconst { JWT_SECRET } = process.env\n\nconst jwtOptions = {\n  jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n  secretOrKey: JWT_SECRET,\n}\n\nexport const local = new LocalStrategy(\n  async (username: string, password: string, done: Function) => {\n    let user\n\n    try {\n      user = await authenticate(username, password)\n    } catch (err) {\n      return done(err)\n    }\n\n    return done(null, user)\n  },\n)\n\nexport const jwt = new JwtStrategy(\n  jwtOptions,\n  async (payload, done) => {\n    let user\n\n    try {\n      user = await User.findById(payload.id)\n    } catch (err) {\n      return done(err)\n    }\n\n    if (user) {\n      done(null, user.toJSON())\n    } else {\n      done(null, false)\n    }\n  },\n)\n","// @flow\n\nimport bcrypt from \"bcrypt\"\nimport type { User as UserModel } from \"../model\"\n\nimport { User } from \"../data\"\n\nexport function comparePassword(password: string, user: UserModel) {\n  return bcrypt.compare(password, user.password)\n}\n\nexport async function authenticate(\n  username: string,\n  password: string,\n) {\n  let model = await User.findOne({ where: { username } })\n\n  if (!model) {\n    throw new Error(\"Invalid username or password\")\n  }\n\n  let user = model.toJSON()\n\n  if (!await comparePassword(password, user)) {\n    throw new Error(\"Invalid username or password\")\n  }\n\n  return user\n}\n","// @flow\n\nimport * as SpatialIndex from \"./spatial-index\"\n\nexport { SpatialIndex }\n","// @flow\n\nimport type { RedisClientPromisified } from \"redis\"\n\nimport type { SpatialIndex, Range, Values } from \"./types\"\n\nconst zip = (a: any[], b: any[]) => a.map((x, i) => [x, b[i]])\n\nconst int10 = (a: number | string) => parseInt(a, 10)\n\nfunction flatten(arr, res = []) {\n  const len = arr.length\n  let i = 0\n  let cur\n\n  for (; i < len; i++) {\n    cur = arr[i]\n    if (Array.isArray(cur)) {\n      flatten(cur, res)\n    } else {\n      res.push(cur)\n    }\n  }\n\n  return res\n}\n\nfunction multi(\n  client: RedisClientPromisified,\n  cb: RedisClientPromisified => *,\n) {\n  const m = client.multi()\n\n  cb(m)\n\n  return m.execAsync()\n}\n\nfunction batch(\n  client: RedisClientPromisified,\n  cb: RedisClientPromisified => *,\n) {\n  const b = client.batch()\n\n  cb(b)\n\n  return b.execAsync()\n}\n\nexport function create(\n  client: RedisClientPromisified,\n  key: string,\n  hashkey: string,\n  dimensions: number,\n  precision: number = 64,\n): SpatialIndex {\n  function checkDimensions(values: $ReadOnlyArray<any>) {\n    if (values.length !== dimensions) {\n      throw new Error(\n        `Please always use ${dimensions} dimensions with this index.`,\n      )\n    }\n  }\n\n  function encode(values: Values) {\n    const comb = values.reduce((a, x, i) => {\n      const bin = x\n        .toString(2)\n        .padStart(precision, \"0\")\n        .split(\"\")\n\n      return i === 0 ? bin : zip(a, bin)\n    }, [])\n    const interleaved = flatten(comb).join(\"\")\n\n    return int10(interleaved)\n      .toString(16)\n      .padStart(precision * dimensions / 4, \"0\")\n  }\n\n  function buildElementString(values: Values, id: string) {\n    checkDimensions(values)\n    const encoded = encode(values)\n    const appended = values.reduce((a, x) => `${a}:${x}`, encoded)\n\n    return `${appended}:${id}`\n  }\n\n  function insert(values: Values, id: string) {\n    const ele = buildElementString(values, id)\n\n    return multi(client, m => {\n      m.zadd(key, 0, ele)\n      m.hset(hashkey, id, ele)\n    })\n  }\n\n  function remove(values: Values, id: string) {\n    const ele = buildElementString(values, id)\n\n    return client.zremAsync(key, ele)\n  }\n\n  async function removeById(id: string) {\n    const ele = await client.hgetAsync(hashkey, id)\n\n    if (!ele) {\n      throw new Error(`Element ${id} not found.`)\n    }\n\n    return multi(client, m => {\n      m.zrem(key, ele)\n      m.hdel(hashkey, id)\n    })\n  }\n\n  async function update(values: Values, id: string) {\n    const ele = buildElementString(values, id)\n    const old = await client.hgetAsync(hashkey, id)\n\n    if (!old) {\n      throw new Error(`Element ${id} not found.`)\n    }\n\n    return multi(client, m => {\n      m.zrem(key, old)\n      m.hdel(hashkey, id)\n      m.zadd(key, 0, ele)\n      m.hset(hashkey, id, ele)\n    })\n  }\n\n  async function queryRaw(range: Range[], exp: number) {\n    const start = []\n    const end = []\n    const e = 2 ** exp\n\n    for (let i = 0; i < range.length; i++) {\n      const r = range[i]\n      start.push(int10(r[0] / e))\n      end.push(int10(r[1] / e))\n    }\n\n    const ranges = []\n    const current = start.slice()\n    let notDone = true\n\n    while (notDone) {\n      const rangeStart = []\n      const rangeEnd = []\n\n      for (let i = 0; i < dimensions; i++) {\n        rangeStart.push(int10(current[i] * e))\n        rangeEnd.push(int10(rangeStart[i] | (e - 1)))\n      }\n\n      ranges.push([\n        `[${encode(rangeStart)}:`,\n        `[${encode(rangeEnd)}:\\xff`,\n      ])\n\n      for (let i = 0; i < dimensions; i++) {\n        if (current[i] !== end[i]) {\n          current[i] += 1\n          break\n        } else if (i === dimensions - 1) {\n          notDone = false\n        } else {\n          current[i] = start[i]\n        }\n      }\n    }\n\n    const allResults = await batch(client, p => {\n      for (let i = 0; i < ranges.length; i++) {\n        const r = ranges[i]\n        p.zrangebylex(key, r[0], r[1])\n      }\n    })\n\n    const results = []\n\n    for (let r = 0; r < allResults.length; r++) {\n      const result = allResults[r]\n\n      for (let i = 0; i < result.length; i++) {\n        const item = result[i]\n        const fields = item.split(\":\")\n        let skip = false\n\n        for (let d = 0; d < dimensions; d++) {\n          if (\n            int10(fields[d + 1]) < range[d][0] ||\n            int10(fields[d + 1]) > range[d][1]\n          ) {\n            skip = true\n            break\n          }\n        }\n\n        if (!skip) {\n          const values = []\n          const id = fields[fields.length - 1]\n\n          for (let v = 1; v < fields.length - 1; v++) {\n            values.push(int10(fields[v]))\n          }\n\n          results.push([values, id])\n        }\n      }\n    }\n\n    return results\n  }\n\n  function query(range: Range[]) {\n    checkDimensions(range)\n\n    const ordered = range.map(r => {\n      if (r[0] < r[1]) {\n        return r\n      }\n      return [r[1], r[0]]\n    })\n    const deltas = ordered.map(r => r[1] - r[0] + 1)\n\n    let delta = Math.min(...deltas)\n    let exp = 1\n\n    while (delta > 2) {\n      delta /= 2\n      exp += 1\n    }\n\n    while (true) {\n      const size = 2 ** exp\n      const d = ordered.map(\n        r => int10(r[1] / size) - int10(r[0] / size) + 1,\n      )\n\n      const ranges = d.reduce((a, b) => a * b)\n\n      if (ranges < 20) {\n        break\n      }\n\n      exp += 1\n    }\n\n    return queryRaw(ordered, exp)\n  }\n\n  return {\n    insert,\n    remove,\n    removeById,\n    update,\n    query,\n  }\n}\n","// @flow\n\nimport redis from \"redis\"\nimport promisifyAll from \"util-promisifyall\"\nimport { Physics } from \"@subspace/core\"\n\nimport type { CreateOptions } from \"redis\"\n\nimport type { Middleware } from \"../types\"\nimport { create as createIndex } from \"./redimension\"\nimport type { SpatialIndex } from \"./types\"\n\npromisifyAll(redis.RedisClient.prototype)\npromisifyAll(redis.Multi.prototype)\n\ntype CreateIndexOptions = {\n  redis: CreateOptions,\n  key: string,\n  dimensions: number,\n  precision?: number,\n}\n\nexport const create = (config: CreateIndexOptions) => {\n  const client = redis.createClient(config.redis)\n  const { key, dimensions, precision = 64 } = config\n\n  return createIndex(client, key, `${key}-map`, dimensions, precision)\n}\n","// @flow\n\nimport bcrypt from \"bcrypt\"\nimport type { Model } from \"sequelize-cockroachdb\"\nimport Sequelize from \"sequelize-cockroachdb\"\n\nimport type {\n  Body as BodyModel,\n  Ship as ShipModel,\n  ShipType as ShipTypeModel,\n  Station as StationModel,\n  Hangar as HangarModel,\n  Inventory as InventoryModel,\n  Item as ItemModel,\n  ItemType as ItemTypeModel,\n} from \"@subspace/core\"\n\nimport configs from \"../../cfg/db.config\"\nimport type { User as UserModel } from \"../model/user\"\n\nconst { NODE_ENV } = process.env\n\nasync function encryptPassword(password: String) {\n  const salt = await bcrypt.genSalt(10)\n  const hash = await bcrypt.hash(password, salt, null)\n\n  return hash\n}\n\nconst config = configs[NODE_ENV]\n\nexport const sequelize = new Sequelize(config)\n\nexport const User: Class<Model<UserModel>> = sequelize.define(\n  \"User\",\n  {\n    username: Sequelize.STRING,\n    password: Sequelize.STRING,\n  },\n)\n\nUser.beforeCreate(async (user: UserModel) => {\n  user.password = await encryptPassword(user.password)\n})\n\nexport const Body: Class<Model<BodyModel>> = sequelize.define(\n  \"Body\",\n  {\n    angle: Sequelize.FLOAT,\n    angularVelocity: Sequelize.FLOAT,\n    positionX: Sequelize.FLOAT,\n    positionY: Sequelize.FLOAT,\n    velocityX: Sequelize.FLOAT,\n    velocityY: Sequelize.FLOAT,\n    width: Sequelize.FLOAT,\n    height: Sequelize.FLOAT,\n  },\n)\n\nexport const ShipType: Class<Model<ShipTypeModel>> = sequelize.define(\n  \"ShipType\",\n  {\n    name: Sequelize.STRING,\n  },\n)\n\nexport const Ship: Class<Model<ShipModel>> = sequelize.define(\n  \"Ship\",\n  {},\n)\n\nexport const Inventory: Class<\n  Model<InventoryModel>,\n> = sequelize.define(\"Inventory\", {})\n\nexport const ItemType: Class<Model<ItemTypeModel>> = sequelize.define(\n  \"ItemType\",\n  {\n    name: Sequelize.STRING,\n  },\n)\n\nexport const Item: Class<Model<ItemModel>> = sequelize.define(\n  \"Item\",\n  {},\n)\n\nexport const Station: Class<Model<StationModel>> = sequelize.define(\n  \"Station\",\n  {},\n)\n\nexport const Hangar: Class<Model<HangarModel>> = sequelize.define(\n  \"Hangar\",\n  {},\n)\n\nUser.hasOne(Ship, { as: \"activeShip\" })\nUser.hasMany(Hangar, { as: \"hangars\" })\n\nShip.belongsTo(Body, { as: \"body\" })\nShip.belongsTo(Inventory, { as: \"inventory\" })\nShip.belongsTo(ShipType, { as: \"shipType\" })\nShip.belongsTo(Hangar, { as: \"hangar\" })\n\nItem.belongsTo(Inventory, { as: \"inventory\" })\nInventory.hasMany(Item, { as: \"items\" })\n\nItem.belongsTo(ItemType, { as: \"itemType\" })\n\nStation.hasMany(Hangar, { as: \"hangars\" })\n\nHangar.belongsTo(Station, { as: \"station\" })\nHangar.belongsTo(User, { as: \"user\" })\nHangar.hasMany(Ship, { as: \"ships\" })\n\nexport type Db = {\n  sequelize: Sequelize,\n  User: Class<Model<UserModel>>,\n  Body: Class<Model<BodyModel>>,\n  ShipType: Class<Model<ShipTypeModel>>,\n  Ship: Class<Model<ShipModel>>,\n  Inventory: Class<Model<InventoryModel>>,\n  ItemType: Class<Model<ItemTypeModel>>,\n  Item: Class<Model<ItemModel>>,\n  Station: Class<Model<StationModel>>,\n  Hangar: Class<Model<HangarModel>>,\n}\n","// @flow\n\nconst path = require(\"path\")\nconst remotedev = require(\"remotedev-server\")\n\nrequire(\"dotenv\").config()\nrequire(\"source-map-support/register\")\n\nremotedev({ hostname: \"0.0.0.0\", port: 9001 })\nrequire(\"./server\")\n\n// this is necessary to kill remotedev-server\nprocess.on(\"SIGUSR2\", () => process.exit(0))\n","// @flow\n\nimport { Loop, Users, Physics, getUserBody } from \"@subspace/core\"\n\nimport * as Async from \"../../util/async\"\n\nimport type { Action, Dispatch, Middleware, State } from \"../../types\"\nimport type { SpatialIndex } from \"../../cache/types\"\n\nconst UPDATE_AREA = 1000\nconst halfUpdateArea = 0.5 * UPDATE_AREA\n\n// Actions\n\nexport const ADJACENT_BODIES_UPDATE = \"adjacent-bodies/update\"\nexport type AdjacentBodiesUpdate = {\n  type: \"adjacent-bodies/update\",\n  payload: {\n    adjacentBodies: { [number]: number[] },\n  },\n}\n\nexport type AdjacentBodiesAction = AdjacentBodiesUpdate\n\n// Action creators\n\nexport function updateAdjacentBodies(adjacentBodies: {\n  [number]: number[],\n}) {\n  return {\n    type: ADJACENT_BODIES_UPDATE,\n    payload: {\n      adjacentBodies,\n    },\n  }\n}\n\n// Reducer\n\nexport type AdjacentBodiesState = {\n  byUserId: { [number]: number[] },\n}\n\nconst initialAdjacentBodiesState = {\n  byUserId: {},\n}\n\nexport default function reducer(\n  state: AdjacentBodiesState = initialAdjacentBodiesState,\n  action: Action,\n) {\n  switch (action.type) {\n    case ADJACENT_BODIES_UPDATE:\n      return {\n        ...state,\n        byUserId: {\n          ...state.byUserId,\n          ...action.payload.adjacentBodies,\n        },\n      }\n    default:\n      return state\n  }\n}\n\n// Selectors\n\nexport const getAdjacentBodies = (state: AdjacentBodiesState) =>\n  state.byUserId\n\n// Middleware\n\nasync function queryAdjacentBodies(\n  state: State,\n  index: SpatialIndex,\n) {\n  const users = Users.getUsers(state.users)\n  const userIds = Object.keys(users)\n  const query = userIds.reduce((a, userId) => {\n    const body = getUserBody(state, Number(userId))\n\n    if (body === null) {\n      return a\n    }\n\n    const { position: [x, y] } = body\n    const range = [\n      [x - halfUpdateArea, x + halfUpdateArea],\n      [y - halfUpdateArea, y + halfUpdateArea],\n    ]\n\n    a[userId] = index\n      .query(range)\n      .then(res => res.map(([, bodyId]) => bodyId))\n\n    return a\n  }, {})\n\n  return await Async.object(query)\n}\n\nexport function createMiddleware(index: SpatialIndex): Middleware {\n  return store => next => action => {\n    switch (action.type) {\n      // Recreate the map of adjacent bodies each tick\n      case Loop.LOOP_TICK: {\n        queryAdjacentBodies(store.getState(), index).then(result => {\n          next(updateAdjacentBodies(result))\n        })\n        break\n      }\n      case Physics.PHYSICS_ADD_BODY:\n        index.insert(\n          action.payload.body.position,\n          action.payload.body.id,\n        )\n        break\n      case Physics.PHYSICS_UPDATE_BODY:\n        index.update(\n          action.payload.body.position,\n          action.payload.body.id,\n        )\n        break\n      default:\n        break\n    }\n\n    return next(action)\n  }\n}\n","// @flow\n\nimport shortid from \"shortid\"\nimport { Users as CoreUsers, Protocol } from \"@subspace/core\"\n\nimport type { Connection, Server as UdpServer } from \"@web-udp/server\"\nimport type {\n  AuthCredentials,\n  User,\n  ServerMessage,\n} from \"@subspace/core\"\nimport * as Users from \"../users\"\nimport type { Action, Middleware } from \"../../types\"\nimport type { ClientId, Client } from \"../../model/client\"\nimport type { AuthClient } from \"../../auth\"\n\n// Actions\n\nexport const CLIENT_ADD = \"client/add\"\nexport type ClientAdd = {\n  type: \"client/add\",\n  payload: {\n    client: Client,\n  },\n}\n\nexport const CLIENT_SEND = \"client/send!\"\nexport type ClientSend = {\n  type: \"client/send!\",\n  payload: {\n    clientId: ClientId,\n    message: ServerMessage,\n  },\n}\n\nexport const CLIENT_REMOVE = \"client/remove!\"\nexport type ClientRemove = {\n  type: \"client/remove!\",\n  payload: {\n    clientId: ClientId,\n  },\n}\n\nexport type ClientAction = ClientAdd | ClientSend | ClientRemove\n\n// Action creators\n\nexport function addClient(client: Client) {\n  return {\n    type: CLIENT_ADD,\n    payload: {\n      client,\n    },\n  }\n}\n\nexport function sendClient(\n  clientId: ClientId,\n  message: ServerMessage,\n) {\n  return {\n    type: CLIENT_SEND,\n    payload: {\n      clientId,\n      message,\n    },\n  }\n}\n\nexport function removeClient(clientId: ClientId) {\n  return {\n    type: CLIENT_REMOVE,\n    payload: {\n      clientId,\n    },\n  }\n}\n\n// Reducers\n\nexport type State = {\n  byId: { [ClientId]: Client },\n  byUserId: { [number]: Client },\n}\n\nconst initialState = {\n  byId: {},\n  byUserId: {},\n}\n\nexport default function reducer(\n  state: State = initialState,\n  action: Action,\n) {\n  switch (action.type) {\n    case CLIENT_ADD: {\n      const { client } = action.payload\n      const byId = {\n        ...state.byId,\n        [client.id]: client,\n      }\n\n      let byUserId = state.byUserId\n\n      if (client.userId) {\n        byUserId = {\n          ...byUserId,\n          [client.userId]: client,\n        }\n      }\n\n      return {\n        ...state,\n        byId,\n        byUserId,\n      }\n    }\n    case CLIENT_REMOVE: {\n      const { clientId } = action.payload\n      const client = getClient(state, clientId)\n      const nextState = { ...state }\n\n      delete nextState.byId[clientId]\n\n      if (client.userId) {\n        delete nextState.byUserId[client.userId]\n      }\n\n      return nextState\n    }\n    default:\n      return state\n  }\n}\n\n// Selectors\n\nexport const getClient = (state: State, clientId: ClientId) =>\n  state.byId[clientId]\n\nexport const getClientByUserId = (state: State, userId: number) =>\n  state.byUserId[userId]\n\n// Middleware\n\nexport function createMiddleware(\n  udp: UdpServer,\n  auth: AuthClient,\n): Middleware {\n  const connections: { [string]: Connection } = {}\n\n  const listen = (\n    connection: Connection,\n    clientId: ClientId,\n    dispatch: Dispatch,\n  ) => {\n    // Remove client from store on connection close\n    connection.closed.subscribe(() => {\n      dispatch(removeClient(clientId))\n    })\n    // Subscribe to client messages\n    connection.messages.subscribe(async data => {\n      const message = JSON.parse(data)\n      const [type] = message\n\n      switch (type) {\n        default:\n          return console.error(`Unrecognized message: ${data}`)\n      }\n    })\n  }\n\n  return store => {\n    udp.connections.subscribe(async connection => {\n      let user\n\n      try {\n        user = await auth.verify(connection.metadata.token)\n      } catch (err) {\n        console.error(\n          `Invalid credentials for connection ${connection.id}`,\n        )\n        connection.send(\n          JSON.stringify(Protocol.authTokenInvalidMessage()),\n        )\n        connection.close()\n        return\n      }\n\n      const { dispatch } = store\n      const clientId = shortid()\n\n      dispatch(\n        addClient({\n          id: clientId,\n          userId: user.id,\n          connectionId: connection.id,\n        }),\n      )\n\n      connections[connection.id] = connection\n      listen(connection, clientId, dispatch)\n    })\n\n    return next => action => {\n      switch (action.type) {\n        case CLIENT_SEND: {\n          const { clients } = store.getState()\n          const { clientId, message } = action.payload\n          const { connectionId } = getClient(clients, clientId)\n\n          connections[connectionId].send(JSON.stringify(message))\n\n          break\n        }\n        case CLIENT_REMOVE: {\n          const { clientId } = action.payload\n          const { clients } = store.getState()\n          const { connectionId } = getClient(clients, clientId)\n\n          connections[connectionId].close()\n          delete connections[connectionId]\n\n          break\n        }\n        default:\n          break\n      }\n\n      return next(action)\n    }\n  }\n}\n","// @flow\n\nimport type {\n  ShipId,\n  Ship,\n  ShipState as CoreShipState,\n} from \"@subspace/core\"\nimport {\n  Ships as CoreShips,\n  Users as CoreUsers,\n  Physics,\n  Protocol,\n} from \"@subspace/core\"\n\nimport * as Clients from \"../clients\"\nimport * as Users from \"../users\"\nimport type { Db } from \"../../data\"\nimport type { Action, Dispatch, Middleware } from \"../../types\"\n\n// Actions\n\nexport const SHIP_LOAD = \"ships/load!\"\nexport type ShipLoad = {\n  type: \"ships/load!\",\n  payload: {\n    shipId: number,\n  },\n}\n\nexport const SHIP_LOAD_FAILURE = \"ships/load_failure\"\nexport type ShipLoadFailure = {\n  type: \"ships/load_failure\",\n  payload: {\n    shipId: number,\n    err: Error,\n  },\n}\n\nexport const SHIP_LOAD_SUCCESS = \"ships/load_success\"\nexport type ShipLoadSuccess = {\n  type: \"ships/load_success\",\n  payload: {\n    ship: Ship,\n  },\n}\n\nexport type ShipAction = ShipLoad | ShipLoadFailure | ShipLoadSuccess\n\n// Action creators\n\nexport function loadShip(shipId: number) {\n  return {\n    type: SHIP_LOAD,\n    payload: {\n      shipId,\n    },\n  }\n}\n\nexport function loadShipFailure(shipId: number, err: Error) {\n  return {\n    type: SHIP_LOAD_FAILURE,\n    payload: {\n      shipId,\n      err,\n    },\n  }\n}\n\nexport function loadShipSuccess(ship: Ship) {\n  return {\n    type: SHIP_LOAD_SUCCESS,\n    payload: {\n      ship,\n    },\n  }\n}\n\n// Reducer\n\nexport type ShipState = $Supertype<CoreShipState>\n\nexport default function reducer(state: ShipState, action: Action) {\n  return CoreShips.default(state, action)\n}\n\n// Middleware\n\nexport function createMiddleware(db: Db): Middleware {\n  return store => next => action => {\n    switch (action.type) {\n      case SHIP_LOAD: {\n        const { shipId } = action.payload\n        // Hydrate a user from db and create entities if they don't exist\n        // (e.g. user ship)\n        db.Ship.findById(shipId)\n          .then(model => {\n            if (!model) {\n              throw new Error(`Ship ${shipId} not found.`)\n            }\n\n            const ship = model.toJSON()\n\n            next(loadShipSuccess(ship))\n            next(CoreShips.addShip(ship))\n\n            if (ship.body) {\n              next(Physics.addBody(ship.body))\n            }\n          })\n          .catch(err => next(loadShipFailure(shipId, err)))\n        break\n      }\n      case CoreShips.SHIP_ADD:\n      case CoreShips.SHIP_UPDATE: {\n        const { clients, users } = store.getState()\n        const { ship } = action.payload\n        const user = CoreUsers.getUserByActiveShipId(users, ship.id)\n\n        if (!user) {\n          break\n        }\n\n        const client = Clients.getClientByUserId(clients, user.id)\n        const message = Protocol.shipUpdateMessage(ship)\n\n        // Send updated user state to client\n        store.dispatch(Clients.sendClient(client.id, message))\n\n        break\n      }\n      default:\n        break\n    }\n\n    return next(action)\n  }\n}\n","// @flow\n\nimport type { UserState as CoreUserState } from \"@subspace/core\"\n\nimport {\n  Loop,\n  Users as CoreUsers,\n  Ships as CoreShips,\n  Physics,\n  Protocol,\n} from \"@subspace/core\"\n\nimport type { ClientId } from \"../clients\"\n\nimport * as Ships from \"../ships\"\nimport * as Clients from \"../clients\"\nimport * as AdjacentBodies from \"../adjacent-bodies\"\nimport * as Hrtime from \"../../util/hrtime\"\n\nimport type { Db } from \"../../data\"\nimport type { Action, Dispatch, Middleware } from \"../../types\"\n\n// Actions\n\nexport const USER_REGISTER = \"users/register!\"\nexport type UserRegister = {\n  type: \"users/register!\",\n  payload: {\n    clientId: ClientId,\n    username: string,\n    password: string,\n  },\n}\n\nexport const USER_LOAD = \"users/load!\"\nexport type UserLoad = {\n  type: \"users/load!\",\n  payload: {\n    userId: number,\n  },\n}\n\nexport const USER_LOAD_FAILURE = \"users/load_failure\"\nexport type UserLoadFailure = {\n  type: \"users/load_failure\",\n  payload: {\n    userId: number,\n    err: Error,\n  },\n}\n\nexport const USER_LOAD_SUCCESS = \"users/load_success\"\nexport type UserLoadSuccess = {\n  type: \"users/load_success\",\n  payload: {\n    userId: number,\n  },\n}\n\nexport type UserAction =\n  | UserRegister\n  | UserLoad\n  | UserLoadFailure\n  | UserLoadSuccess\n\n// Action creators\n\nexport function registerUser(username: string, password: string) {\n  return {\n    type: USER_REGISTER,\n    payload: {\n      clientId,\n      username,\n      password,\n    },\n  }\n}\n\nexport function loadUser(userId: number) {\n  return {\n    type: USER_LOAD,\n    payload: {\n      userId,\n    },\n  }\n}\n\nexport function loadUserFailure(userId: number, err: Error) {\n  return {\n    type: USER_LOAD_FAILURE,\n    payload: {\n      userId,\n      err,\n    },\n  }\n}\n\nexport function loadUserSuccess(userId: number) {\n  return {\n    type: USER_LOAD_SUCCESS,\n    payload: {\n      userId,\n    },\n  }\n}\n\n// Reducer\n\nexport type UserState = $Supertype<CoreUserState>\n\nexport default function reducer(state: UserState, action: Action) {\n  return CoreUsers.default(state, action)\n}\n\n// Middleware\n\nexport function createMiddleware(\n  db: Db,\n  sendRate: number,\n): Middleware {\n  return store => {\n    const sendStateUpdates = Hrtime.throttle(() => {\n      const {\n        adjacentBodies,\n        clients,\n        users,\n        physics,\n        loop,\n      } = store.getState()\n      const adjacentBodiesByUserId = AdjacentBodies.getAdjacentBodies(\n        adjacentBodies,\n      )\n\n      for (const userId in CoreUsers.getUsers(users)) {\n        const id = Number(userId)\n        const client = Clients.getClientByUserId(clients, id)\n        const bodies = adjacentBodiesByUserId[id].map(bodyId =>\n          Physics.getBody(physics, bodyId),\n        )\n        const message = Protocol.snapshotMessage(loop.frame, bodies)\n\n        store.dispatch(Clients.sendClient(client.id, message))\n      }\n    }, sendRate)\n\n    return next => action => {\n      switch (action.type) {\n        case Loop.LOOP_TICK: {\n          sendStateUpdates()\n          break\n        }\n        case USER_REGISTER: {\n          const { clientId, username, password } = action.payload\n\n          db.User.create({ username, password })\n            .then(model => {\n              const user = model.toJSON()\n              const message = Protocol.userRegisterSuccessMessage()\n\n              next(Clients.sendClient(clientId, message))\n            })\n            .catch(err => {\n              const message = Protocol.userRegisterFailureMessage()\n\n              next(Clients.sendClient(clientId, message))\n            })\n        }\n        case USER_LOAD: {\n          const { userId } = action.payload\n          // Hydrate a user from db and create entities if they don't exist\n          // (e.g. user ship)\n          db.User.findById(userId)\n            .then(model => {\n              if (!model) {\n                throw new Error(`User ${userId} not found`)\n              }\n\n              const user = model.toJSON()\n\n              next(loadUserSuccess(userId))\n              next(CoreUsers.addUser(user))\n\n              if (user.activeShip) {\n                next(CoreShips.addShip(user.activeShip))\n              }\n            })\n            .catch(e => next(loadUserFailure(userId, e)))\n          break\n        }\n        case CoreUsers.USER_ADD:\n        case CoreUsers.USER_UPDATE: {\n          const { clients } = store.getState()\n          const { user } = action.payload\n          const client = Clients.getClientByUserId(clients, user.id)\n          const message = Protocol.userUpdateMessage(user)\n\n          // Send updated user state to client\n          next(Clients.sendClient(client.id, message))\n\n          break\n        }\n        default:\n          break\n      }\n\n      return next(action)\n    }\n  }\n}\n","// @flow\n\nimport { reducers as coreReducers } from \"@subspace/core\"\n\nimport adjacentBodies from \"./modules/adjacent-bodies\"\nimport clients from \"./modules/clients\"\nimport users from \"./modules/users\"\nimport ships from \"./modules/ships\"\n\nconst { loop, physics } = coreReducers\n\nconst reducers = {\n  adjacentBodies,\n  clients,\n  users,\n  ships,\n  loop,\n  physics,\n}\n\nexport default reducers\n\nexport type Reducers = $Subtype<typeof reducers>\n","// @flow\n\nimport express from \"express\"\nimport { User } from \"../data\"\nimport { generateToken } from \"../auth/jwt\"\nimport { auth, login } from \"../auth/middleware\"\n\nconst router = express.Router()\n\nrouter.route(\"/register\").post(async (req, res) => {\n  let { username, password } = req.body\n\n  if (await User.findOne({ where: { username } })) {\n    res.status(409).json({ error: \"Username already taken\" })\n    return\n  }\n\n  let model\n\n  try {\n    model = await User.create({ username, password })\n  } catch (error) {\n    res.status(400).json({ error })\n    return\n  }\n\n  const user = model.toJSON()\n\n  res.status(201).json({\n    token: generateToken(user),\n    user,\n  })\n})\n\nrouter.route(\"/login\").post(login, (req, res) => {\n  const { user: { id, username } } = req\n  const user = { id, username }\n\n  res.status(200).json({\n    token: generateToken(user),\n    user,\n  })\n})\n\nrouter.route(\"/verify\").post(auth, (req, res) => {\n  const { user: { id, username } } = req\n  const user = { id, username }\n\n  res.status(200).json({\n    token: generateToken(user),\n    user,\n  })\n})\n\nexport default router\n","// @flow\n\nimport * as Hrtime from \"./util/hrtime\"\n\nexport function create(rate: number): () => Promise<number> {\n  const nsPerTick = rate * Hrtime.NS_PER_SEC\n  const hrTimeStep = [0, nsPerTick]\n\n  let previous = process.hrtime()\n\n  function timeoutHandler(done) {\n    return () => {\n      const diff = process.hrtime(previous)\n      const delta = Hrtime.sub(diff, hrTimeStep)\n      const d = Hrtime.sum(delta)\n\n      if (d < 0) {\n        setImmediate(timeoutHandler(done))\n        return\n      }\n\n      done((d + nsPerTick) / Hrtime.NS_PER_SEC)\n\n      previous = Hrtime.add(process.hrtime(), delta)\n    }\n  }\n\n  return () =>\n    new Promise(resolve => {\n      setTimeout(timeoutHandler(resolve))\n    })\n}\n","// @flow\n\nimport { createServer } from \"http\"\nimport * as Udp from \"@web-udp/server\"\nimport { Loop } from \"@subspace/core\"\n\nimport type { Connection } from \"@web-udp/server\"\nimport type { UserId, UserMessage } from \"@subspace/core\"\n\nimport express from \"express\"\nimport passport from \"passport\"\nimport body from \"body-parser\"\n\nimport serverConfig from \"../cfg/server.config.json\"\nimport * as db from \"./data\"\nimport { configureStore } from \"./store\"\nimport { authenticate, verify } from \"./auth\"\nimport { jwt, local } from \"./auth/strategy\"\nimport authRouter from \"./routers/auth\"\n\nconst { TICK_RATE, SEND_RATE, PORT } = process.env\n\nconst tickRate = 1 / (Number(TICK_RATE) || serverConfig.tick_rate)\nconst sendRate = 1 / (Number(SEND_RATE) || serverConfig.send_rate)\n\nconst app = express()\nconst server = new createServer(app)\nconst udp = new Udp.Server({ server })\n\n// passport\npassport.use(jwt)\npassport.use(local)\n\n// middleware\napp.use(body())\n\n// routes\napp.use(\"/auth\", authRouter)\n\nasync function main() {\n  const store = configureStore({\n    auth: { authenticate, verify },\n    db,\n    tickRate,\n    sendRate,\n    udp,\n  })\n\n  store.dispatch(Loop.startLoop())\n  console.log(\"syncing database\")\n  await db.sequelize.sync()\n\n  console.log(`server listening at //localhost:${String(PORT)}`)\n\n  server.listen(Number(PORT))\n}\n\nmain()\n","// @flow\n\nimport { Loop, Physics, Ships as CoreShips } from \"@subspace/core\"\n\nimport { createStore, combineReducers, applyMiddleware } from \"redux\"\nimport { composeWithDevTools } from \"remote-redux-devtools\"\n\nimport type { Connection, Server as UdpServer } from \"@web-udp/server\"\nimport type { AuthClient } from \"../auth\"\nimport type { Db } from \"../data\"\n\nimport redisConfig from \"../../cfg/redis.config\"\nimport * as Scheduler from \"../scheduler\"\nimport { SpatialIndex } from \"../cache\"\nimport * as Clients from \"../modules/clients\"\nimport * as Ships from \"../modules/ships\"\nimport * as Users from \"../modules/users\"\nimport * as AdjacentBodies from \"../modules/adjacent-bodies\"\nimport reducers from \"../reducers\"\n\nimport type { Store } from \"../types\"\n\ntype ConfigureStoreOptions = {\n  db: Db,\n  auth: AuthClient,\n  tickRate: number,\n  sendRate: number,\n  udp: UdpServer,\n}\n\nconst physicsDriver = Physics.P2Driver.create({\n  gravity: [0, 0],\n})\n\nconst spatialIndex = SpatialIndex.create({\n  redis: redisConfig,\n  key: \"ss-body\",\n  dimensions: 2,\n})\n\nconst composeEnhancers = composeWithDevTools({\n  port: 9001,\n  actionsBlacklist: [\n    Loop.LOOP_TICK,\n    Physics.PHYSICS_UPDATE_BODY,\n    AdjacentBodies.ADJACENT_BODIES_UPDATE,\n  ],\n})\n\nexport function configureStore(\n  options: ConfigureStoreOptions,\n): Store {\n  const { db, auth, tickRate, sendRate, udp } = options\n\n  const scheduler = Scheduler.create(tickRate)\n\n  const enhancers = [\n    applyMiddleware(\n      // Core game loop\n      Loop.createMiddleware(scheduler),\n      // Handles loading of ships and sending model updates to client\n      Ships.createMiddleware(db),\n      // Handles ship actions like thrust, turning, etc\n      CoreShips.createMiddleware(),\n      // Manages spatial index and queries the index each tick\n      AdjacentBodies.createMiddleware(spatialIndex),\n      // Handles loading of users and sending model updates to client\n      Users.createMiddleware(db, sendRate),\n      // Handles authentication of new connections and sending of messages\n      Clients.createMiddleware(udp, auth),\n    ),\n  ]\n\n  const rootReducer = combineReducers(reducers)\n  const store = createStore(\n    rootReducer,\n    composeEnhancers(...enhancers),\n  )\n\n  return store\n}\n","const zipObject = (keys = [], values = []) =>\n  keys.reduce((a, key, index) => {\n    a[key] = values[index]\n    return a\n  }, {})\n\nexport function object(obj: {}) {\n  const keys = Object.keys(obj)\n  return Promise.all(\n    keys.map(key => {\n      const value = obj[key]\n\n      if (typeof value === \"object\" && !value.then) {\n        return promiseAllObject(value)\n      }\n\n      return value\n    }),\n  ).then(result => zipObject(keys, result))\n}\n","// @flow\n\nexport const NS_PER_SEC = 1e9\n\ntype Hrtime = [number, number]\n\nexport function add(t1: Hrtime, t2: Hrtime) {\n  return [t1[0] + t2[0], t1[1] + t2[1]]\n}\n\nexport function sub(t1: Hrtime, t2: Hrtime) {\n  return [t1[0] - t2[0], t1[1] - t2[1]]\n}\n\nexport function sum(t: Hrtime) {\n  return t[0] * NS_PER_SEC + t[1]\n}\n\nexport function throttle(fn: Function, rate: number) {\n  const nsPerTick = rate * NS_PER_SEC\n  const hrTimeStep = [0, nsPerTick]\n\n  let t0 = process.hrtime()\n  let prevResult\n\n  return (...args: any[]) => {\n    // Get a high resolution diff\n    const diff = process.hrtime(t0)\n    // Subtract a full step from the diff\n    const delta = sub(diff, hrTimeStep)\n    // Convert to nanoseconds\n    const d = sum(delta)\n\n    if (d >= 0) {\n      t0 = add(process.hrtime(), delta)\n      prevResult = fn(...args)\n    }\n\n    return prevResult\n  }\n}\n","module.exports = require(\"@babel/runtime/helpers/interopRequireDefault\");","module.exports = require(\"@babel/runtime/helpers/interopRequireWildcard\");","module.exports = require(\"@babel/runtime/helpers/objectSpread\");","module.exports = require(\"@subspace/core\");","module.exports = require(\"@web-udp/server\");","module.exports = require(\"bcrypt\");","module.exports = require(\"body-parser\");","module.exports = require(\"dotenv\");","module.exports = require(\"express\");","module.exports = require(\"http\");","module.exports = require(\"jsonwebtoken\");","module.exports = require(\"passport\");","module.exports = require(\"passport-jwt\");","module.exports = require(\"passport-local\");","module.exports = require(\"path\");","module.exports = require(\"redis\");","module.exports = require(\"redux\");","module.exports = require(\"remote-redux-devtools\");","module.exports = require(\"remotedev-server\");","module.exports = require(\"sequelize\");","module.exports = require(\"sequelize-cockroachdb\");","module.exports = require(\"shortid\");","module.exports = require(\"source-map-support/register\");","module.exports = require(\"util-promisifyall\");"],"sourceRoot":""}
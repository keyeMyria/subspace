{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./cfg/db.config.js","webpack:///./cfg/redis.config.js","webpack:///./src/auth/index.js","webpack:///./src/auth/jwt.js","webpack:///./src/auth/middleware.js","webpack:///./src/auth/strategy.js","webpack:///./src/auth/util.js","webpack:///./src/cache/index.js","webpack:///./src/cache/redimension.js","webpack:///./src/cache/spatial-index.js","webpack:///./src/data/index.js","webpack:///./src/index.js","webpack:///./src/modules/adjacent-bodies/index.js","webpack:///./src/modules/clients/index.js","webpack:///./src/modules/ships/index.js","webpack:///./src/modules/users/index.js","webpack:///./src/reducers.js","webpack:///./src/routers/auth.js","webpack:///./src/scheduler.js","webpack:///./src/server.js","webpack:///./src/store/index.js","webpack:///./src/util/async.js","webpack:///./src/util/hrtime.js","webpack:///external \"@babel/runtime/helpers/asyncToGenerator\"","webpack:///external \"@babel/runtime/helpers/defineProperty\"","webpack:///external \"@babel/runtime/helpers/interopRequireDefault\"","webpack:///external \"@babel/runtime/helpers/interopRequireWildcard\"","webpack:///external \"@babel/runtime/helpers/objectSpread\"","webpack:///external \"@babel/runtime/helpers/slicedToArray\"","webpack:///external \"@babel/runtime/helpers/toConsumableArray\"","webpack:///external \"@babel/runtime/helpers/typeof\"","webpack:///external \"@babel/runtime/regenerator\"","webpack:///external \"@subspace/core\"","webpack:///external \"@web-udp/server\"","webpack:///external \"bcrypt\"","webpack:///external \"body-parser\"","webpack:///external \"dotenv\"","webpack:///external \"express\"","webpack:///external \"http\"","webpack:///external \"jsonwebtoken\"","webpack:///external \"passport\"","webpack:///external \"passport-jwt\"","webpack:///external \"passport-local\"","webpack:///external \"path\"","webpack:///external \"redis\"","webpack:///external \"redux\"","webpack:///external \"remote-redux-devtools\"","webpack:///external \"remotedev-server\"","webpack:///external \"sequelize\"","webpack:///external \"sequelize-cockroachdb\"","webpack:///external \"shortid\"","webpack:///external \"source-map-support/register\"","webpack:///external \"util-promisifyall\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","w","s","Sequelize","process","env","DB_USERNAME","DB_PASSWORD","DB_NAME","DB_HOST","DB_PORT","retry","match","ConnectionError","ConnectionRefusedError","ConnectionTimedOutError","OptimisticLockError","development","username","password","database","host","port","dialect","test","production","family","db","enableReadyCheck","retry_strategy","options","error","code","Error","total_retry_time","attempt","Math","min","Util","_interopRequireWildcard","_jwt","_callee","user","_regenerator","default","wrap","_context","prev","next","authenticate","sent","abrupt","generateToken","stop","this","_callee2","token","_context2","verifyToken","jwt","verify","JWT_SECRET","sign","expiresIn","_jsonwebtoken","_interopRequireDefault","JWT_EXPIRE_SECONDS","passport","auth","session","login","_passportJwt","_passportLocal","_util","_data","jwtOptions","jwtFromRequest","ExtractJwt","fromAuthHeaderAsBearerToken","secretOrKey","local","LocalStrategy","_ref","_asyncToGenerator2","mark","done","t0","_x","_x2","_x3","apply","arguments","JwtStrategy","_ref2","payload","User","findById","id","toJSON","_x4","_x5","_bcrypt","comparePassword","bcrypt","compare","model","findOne","where","SpatialIndex","client","key","hashkey","dimensions","precision","length","undefined","checkDimensions","values","concat","encode","comb","reduce","a","x","bin","toString","padStart","split","zip","interleaved","flatten","arr","res","len","cur","Array","isArray","push","join","int10","buildElementString","encoded","appended","_removeById","ele","hgetAsync","multi","zrem","hdel","_update","old","zadd","hset","_queryRaw","_callee3","range","exp","start","end","e","ranges","current","notDone","rangeStart","rangeEnd","_i","_i2","allResults","results","_r2","result","_i4","item","fields","skip","v","_context3","pow","slice","batch","zrangebylex","insert","remove","zremAsync","removeById","update","query","ordered","map","deltas","delta","_toConsumableArray2","_loop","size","b","_ret","queryRaw","parseInt","cb","execAsync","_redis","_utilPromisifyall","_redimension","redis","RedisClient","Multi","config","createClient","_config$precision","create","_sequelizeCockroachdb","encryptPassword","salt","hash","genSalt","configs","sequelize","define","STRING","beforeCreate","Body","angle","FLOAT","angularVelocity","positionX","positionY","velocityX","velocityY","width","height","ShipType","Ship","Inventory","ItemType","Item","Station","Hangar","hasOne","as","hasMany","belongsTo","remotedev","hostname","state","initialAdjacentBodiesState","action","type","ADJACENT_BODIES_UPDATE","_objectSpread2","byUserId","adjacentBodies","index","store","Loop","LOOP_TICK","queryAdjacentBodies","getState","then","updateAdjacentBodies","Physics","PHYSICS_ADD_BODY","body","position","PHYSICS_UPDATE_BODY","_core","Async","halfUpdateArea","users","userIds","Users","getUsers","keys","userId","getUserBody","Number","_body$position","_slicedToArray2","y","clientId","message","CLIENT_SEND","initialState","CLIENT_ADD","byId","_defineProperty2","_objectSpread4","CLIENT_REMOVE","getClient","nextState","udp","connections","listen","connection","dispatch","closed","subscribe","removeClient","messages","data","_message","JSON","parse","console","metadata","send","stringify","Protocol","authTokenInvalidMessage","close","_shortid","addClient","connectionId","_store$getState","clients","_action$payload","_getClient","_store$getState2","_getClient2","shipId","SHIP_LOAD","CoreShips","ship","loadShipSuccess","addShip","addBody","catch","err","loadShipFailure","SHIP_ADD","SHIP_UPDATE","CoreUsers","getUserByActiveShipId","Clients","getClientByUserId","shipUpdateMessage","sendClient","SHIP_LOAD_FAILURE","SHIP_LOAD_SUCCESS","USER_REGISTER","USER_LOAD","sendRate","sendStateUpdates","Hrtime","throttle","physics","loop","adjacentBodiesByUserId","AdjacentBodies","getAdjacentBodies","bodies","bodyId","getBody","snapshotMessage","frame","userRegisterSuccessMessage","userRegisterFailureMessage","loadUserSuccess","addUser","activeShip","loadUserFailure","USER_ADD","USER_UPDATE","userUpdateMessage","USER_LOAD_FAILURE","USER_LOAD_SUCCESS","_adjacentBodies","_clients","_users","_ships","coreReducers","ships","_express","_middleware","router","express","Router","route","post","req","_req$body","status","json","_req$user","_req$user2","rate","nsPerTick","NS_PER_SEC","hrTimeStep","previous","hrtime","Promise","resolve","setTimeout","timeoutHandler","diff","sub","sum","setImmediate","add","_http","Udp","_passport","_bodyParser","_serverConfig","_store","_auth","_strategy","_auth2","TICK_RATE","SEND_RATE","PORT","tickRate","serverConfig","tick_rate","send_rate","app","server","createServer","Server","configureStore","startLoop","log","sync","String","use","authRouter","main","scheduler","Scheduler","enhancers","_redux","applyMiddleware","createMiddleware","Ships","spatialIndex","rootReducer","combineReducers","reducers","createStore","composeEnhancers","_remoteReduxDevtools","_cache","_reducers","P2Driver","gravity","redisConfig","composeWithDevTools","actionsBlacklist","obj","all","_typeof2","promiseAllObject","zipObject","fn","prevResult","t1","t2","t","require"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading wasm modules\n \tvar installedWasmModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// object with all compiled WebAssembly.Modules\n \t__webpack_require__.w = {};\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","const Sequelize = require(\"sequelize\")\n\nconst {\n  DB_USERNAME,\n  DB_PASSWORD,\n  DB_NAME,\n  DB_HOST,\n  DB_PORT,\n} = process.env\n\nconst retry = {\n  match: [\n    Sequelize.ConnectionError,\n    Sequelize.ConnectionRefusedError,\n    Sequelize.ConnectionTimedOutError,\n    Sequelize.OptimisticLockError,\n  ],\n}\n\nmodule.exports = {\n  development: {\n    username: \"cockroach\",\n    password: null,\n    database: \"ss_dev\",\n    host: \"127.0.0.1\",\n    port: 26257,\n    dialect: \"postgres\",\n    retry,\n  },\n  test: {\n    username: DB_USERNAME,\n    password: DB_PASSWORD,\n    database: DB_NAME,\n    host: DB_HOST,\n    port: DB_PORT,\n    dialect: \"postgres\",\n    retry,\n  },\n  production: {\n    username: DB_USERNAME,\n    password: DB_PASSWORD,\n    database: DB_NAME,\n    host: DB_HOST,\n    port: DB_PORT,\n    dialect: \"postgres\",\n    retry,\n  },\n}\n","export default {\n  port: 6379,\n  host: \"localhost\",\n  family: 4,\n  db: 0,\n  enableReadyCheck: true,\n  retry_strategy: options => {\n    if (options.error && options.error.code === \"ECONNREFUSED\") {\n      // End reconnecting on a specific error and flush all commands with\n      // a individual error\n      return new Error(\"The server refused the connection\")\n    }\n    if (options.total_retry_time > 1000 * 60 * 60) {\n      // End reconnecting after a specific timeout and flush all commands\n      // with a individual error\n      return new Error(\"Retry time exhausted\")\n    }\n    if (options.attempt > 10) {\n      // End reconnecting with built in error\n      return\n    }\n    // reconnect after\n    return Math.min(options.attempt * 100, 3000)\n  },\n}\n","// @flow\n\nimport type { User as UserModel } from \"@subspace/core\"\n\nimport { User } from \"../data\"\nimport * as Util from \"./util\"\nimport { generateToken, verifyToken } from \"./jwt\"\n\nexport type AuthClient = {\n  authenticate: (username: string, password: string) => string,\n  verify: string => Promise<UserModel>,\n}\n\nexport async function authenticate(\n  username: string,\n  password: string,\n) {\n  const user = await Util.authenticate(username, password)\n\n  return generateToken(user)\n}\n\nexport async function verify(token: string) {\n  return verifyToken(token)\n}\n","// @flow\n\nimport jwt from \"jsonwebtoken\"\nimport type { User } from \"@subspace/core\"\n\nconst { JWT_SECRET, JWT_EXPIRE_SECONDS } = process.env\n\nexport function verifyToken(token: string) {\n  return jwt.verify(token, JWT_SECRET)\n}\n\nexport function generateToken(user: User) {\n  return jwt.sign(user, JWT_SECRET, {\n    expiresIn: \"24h\",\n  })\n}\n","// @flow\n\nconst passport = require(\"passport\")\n\nexport const auth = passport.authenticate(\"jwt\", { session: false })\nexport const login = passport.authenticate(\"local\", {\n  session: false,\n})\n","// @flow\n\nimport { Strategy as JwtStrategy, ExtractJwt } from \"passport-jwt\"\nimport LocalStrategy from \"passport-local\"\n\nimport { authenticate } from \"./util\"\nimport { User } from \"../data\"\n\nconst { JWT_SECRET } = process.env\n\nconst jwtOptions = {\n  jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n  secretOrKey: JWT_SECRET,\n}\n\nexport const local = new LocalStrategy(\n  async (username: string, password: string, done: Function) => {\n    let user\n\n    try {\n      user = await authenticate(username, password)\n    } catch (err) {\n      return done(err)\n    }\n\n    return done(null, user)\n  },\n)\n\nexport const jwt = new JwtStrategy(\n  jwtOptions,\n  async (payload, done) => {\n    let user\n\n    try {\n      user = await User.findById(payload.id)\n    } catch (err) {\n      return done(err)\n    }\n\n    if (user) {\n      done(null, user.toJSON())\n    } else {\n      done(null, false)\n    }\n  },\n)\n","// @flow\n\nimport bcrypt from \"bcrypt\"\nimport type { User as UserModel } from \"../model\"\n\nimport { User } from \"../data\"\n\nexport function comparePassword(password: string, user: UserModel) {\n  return bcrypt.compare(password, user.password)\n}\n\nexport async function authenticate(\n  username: string,\n  password: string,\n) {\n  let model = await User.findOne({ where: { username } })\n\n  if (!model) {\n    throw new Error(\"Invalid username or password\")\n  }\n\n  let user = model.toJSON()\n\n  if (!await comparePassword(password, user)) {\n    throw new Error(\"Invalid username or password\")\n  }\n\n  return user\n}\n","// @flow\n\nimport * as SpatialIndex from \"./spatial-index\"\n\nexport { SpatialIndex }\n","// @flow\n\nimport type { RedisClientPromisified } from \"redis\"\n\nimport type { SpatialIndex, Range, Values } from \"./types\"\n\nconst zip = (a: any[], b: any[]) => a.map((x, i) => [x, b[i]])\n\nconst int10 = (a: number | string) => parseInt(a, 10)\n\nfunction flatten(arr, res = []) {\n  const len = arr.length\n  let i = 0\n  let cur\n\n  for (; i < len; i++) {\n    cur = arr[i]\n    if (Array.isArray(cur)) {\n      flatten(cur, res)\n    } else {\n      res.push(cur)\n    }\n  }\n\n  return res\n}\n\nfunction multi(\n  client: RedisClientPromisified,\n  cb: RedisClientPromisified => *,\n) {\n  const m = client.multi()\n\n  cb(m)\n\n  return m.execAsync()\n}\n\nfunction batch(\n  client: RedisClientPromisified,\n  cb: RedisClientPromisified => *,\n) {\n  const b = client.batch()\n\n  cb(b)\n\n  return b.execAsync()\n}\n\nexport function create(\n  client: RedisClientPromisified,\n  key: string,\n  hashkey: string,\n  dimensions: number,\n  precision: number = 64,\n): SpatialIndex {\n  function checkDimensions(values: $ReadOnlyArray<any>) {\n    if (values.length !== dimensions) {\n      throw new Error(\n        `Please always use ${dimensions} dimensions with this index.`,\n      )\n    }\n  }\n\n  function encode(values: Values) {\n    const comb = values.reduce((a, x, i) => {\n      const bin = x\n        .toString(2)\n        .padStart(precision, \"0\")\n        .split(\"\")\n\n      return i === 0 ? bin : zip(a, bin)\n    }, [])\n    const interleaved = flatten(comb).join(\"\")\n\n    return int10(interleaved)\n      .toString(16)\n      .padStart(precision * dimensions / 4, \"0\")\n  }\n\n  function buildElementString(values: Values, id: string) {\n    checkDimensions(values)\n    const encoded = encode(values)\n    const appended = values.reduce((a, x) => `${a}:${x}`, encoded)\n\n    return `${appended}:${id}`\n  }\n\n  function insert(values: Values, id: string) {\n    const ele = buildElementString(values, id)\n\n    return multi(client, m => {\n      m.zadd(key, 0, ele)\n      m.hset(hashkey, id, ele)\n    })\n  }\n\n  function remove(values: Values, id: string) {\n    const ele = buildElementString(values, id)\n\n    return client.zremAsync(key, ele)\n  }\n\n  async function removeById(id: string) {\n    const ele = await client.hgetAsync(hashkey, id)\n\n    if (!ele) {\n      throw new Error(`Element ${id} not found.`)\n    }\n\n    return multi(client, m => {\n      m.zrem(key, ele)\n      m.hdel(hashkey, id)\n    })\n  }\n\n  async function update(values: Values, id: string) {\n    const ele = buildElementString(values, id)\n    const old = await client.hgetAsync(hashkey, id)\n\n    if (!old) {\n      throw new Error(`Element ${id} not found.`)\n    }\n\n    return multi(client, m => {\n      m.zrem(key, old)\n      m.hdel(hashkey, id)\n      m.zadd(key, 0, ele)\n      m.hset(hashkey, id, ele)\n    })\n  }\n\n  async function queryRaw(range: Range[], exp: number) {\n    const start = []\n    const end = []\n    const e = 2 ** exp\n\n    for (let i = 0; i < range.length; i++) {\n      const r = range[i]\n      start.push(int10(r[0] / e))\n      end.push(int10(r[1] / e))\n    }\n\n    const ranges = []\n    const current = start.slice()\n    let notDone = true\n\n    while (notDone) {\n      const rangeStart = []\n      const rangeEnd = []\n\n      for (let i = 0; i < dimensions; i++) {\n        rangeStart.push(int10(current[i] * e))\n        rangeEnd.push(int10(rangeStart[i] | (e - 1)))\n      }\n\n      ranges.push([\n        `[${encode(rangeStart)}:`,\n        `[${encode(rangeEnd)}:\\xff`,\n      ])\n\n      for (let i = 0; i < dimensions; i++) {\n        if (current[i] !== end[i]) {\n          current[i] += 1\n          break\n        } else if (i === dimensions - 1) {\n          notDone = false\n        } else {\n          current[i] = start[i]\n        }\n      }\n    }\n\n    const allResults = await batch(client, p => {\n      for (let i = 0; i < ranges.length; i++) {\n        const r = ranges[i]\n        p.zrangebylex(key, r[0], r[1])\n      }\n    })\n\n    const results = []\n\n    for (let r = 0; r < allResults.length; r++) {\n      const result = allResults[r]\n\n      for (let i = 0; i < result.length; i++) {\n        const item = result[i]\n        const fields = item.split(\":\")\n        let skip = false\n\n        for (let d = 0; d < dimensions; d++) {\n          if (\n            int10(fields[d + 1]) < range[d][0] ||\n            int10(fields[d + 1]) > range[d][1]\n          ) {\n            skip = true\n            break\n          }\n        }\n\n        if (!skip) {\n          const values = []\n          const id = fields[fields.length - 1]\n\n          for (let v = 1; v < fields.length - 1; v++) {\n            values.push(int10(fields[v]))\n          }\n\n          results.push([values, id])\n        }\n      }\n    }\n\n    return results\n  }\n\n  function query(range: Range[]) {\n    checkDimensions(range)\n\n    const ordered = range.map(r => {\n      if (r[0] < r[1]) {\n        return r\n      }\n      return [r[1], r[0]]\n    })\n    const deltas = ordered.map(r => r[1] - r[0] + 1)\n\n    let delta = Math.min(...deltas)\n    let exp = 1\n\n    while (delta > 2) {\n      delta /= 2\n      exp += 1\n    }\n\n    while (true) {\n      const size = 2 ** exp\n      const d = ordered.map(\n        r => int10(r[1] / size) - int10(r[0] / size) + 1,\n      )\n\n      const ranges = d.reduce((a, b) => a * b)\n\n      if (ranges < 20) {\n        break\n      }\n\n      exp += 1\n    }\n\n    return queryRaw(ordered, exp)\n  }\n\n  return {\n    insert,\n    remove,\n    removeById,\n    update,\n    query,\n  }\n}\n","// @flow\n\nimport redis from \"redis\"\nimport promisifyAll from \"util-promisifyall\"\nimport { Physics } from \"@subspace/core\"\n\nimport type { CreateOptions } from \"redis\"\n\nimport type { Middleware } from \"../types\"\nimport { create as createIndex } from \"./redimension\"\nimport type { SpatialIndex } from \"./types\"\n\npromisifyAll(redis.RedisClient.prototype)\npromisifyAll(redis.Multi.prototype)\n\ntype CreateIndexOptions = {\n  redis: CreateOptions,\n  key: string,\n  dimensions: number,\n  precision?: number,\n}\n\nexport const create = (config: CreateIndexOptions) => {\n  const client = redis.createClient(config.redis)\n  const { key, dimensions, precision = 64 } = config\n\n  return createIndex(client, key, `${key}-map`, dimensions, precision)\n}\n","// @flow\n\nimport bcrypt from \"bcrypt\"\nimport type { Model } from \"sequelize-cockroachdb\"\nimport Sequelize from \"sequelize-cockroachdb\"\n\nimport type {\n  Body as BodyModel,\n  Ship as ShipModel,\n  ShipType as ShipTypeModel,\n  Station as StationModel,\n  Hangar as HangarModel,\n  Inventory as InventoryModel,\n  Item as ItemModel,\n  ItemType as ItemTypeModel,\n} from \"@subspace/core\"\n\nimport configs from \"../../cfg/db.config\"\nimport type { User as UserModel } from \"../model/user\"\n\nconst { NODE_ENV } = process.env\n\nasync function encryptPassword(password: String) {\n  const salt = await bcrypt.genSalt(10)\n  const hash = await bcrypt.hash(password, salt, null)\n\n  return hash\n}\n\nconst config = configs[NODE_ENV]\n\nexport const sequelize = new Sequelize(config)\n\nexport const User: Class<Model<UserModel>> = sequelize.define(\n  \"User\",\n  {\n    username: Sequelize.STRING,\n    password: Sequelize.STRING,\n  },\n)\n\nUser.beforeCreate(async (user: UserModel) => {\n  user.password = await encryptPassword(user.password)\n})\n\nexport const Body: Class<Model<BodyModel>> = sequelize.define(\n  \"Body\",\n  {\n    angle: Sequelize.FLOAT,\n    angularVelocity: Sequelize.FLOAT,\n    positionX: Sequelize.FLOAT,\n    positionY: Sequelize.FLOAT,\n    velocityX: Sequelize.FLOAT,\n    velocityY: Sequelize.FLOAT,\n    width: Sequelize.FLOAT,\n    height: Sequelize.FLOAT,\n  },\n)\n\nexport const ShipType: Class<Model<ShipTypeModel>> = sequelize.define(\n  \"ShipType\",\n  {\n    name: Sequelize.STRING,\n  },\n)\n\nexport const Ship: Class<Model<ShipModel>> = sequelize.define(\n  \"Ship\",\n  {},\n)\n\nexport const Inventory: Class<Model<InventoryModel>> = sequelize.define(\n  \"Inventory\",\n  {},\n)\n\nexport const ItemType: Class<Model<ItemTypeModel>> = sequelize.define(\n  \"ItemType\",\n  {\n    name: Sequelize.STRING,\n  },\n)\n\nexport const Item: Class<Model<ItemModel>> = sequelize.define(\n  \"Item\",\n  {},\n)\n\nexport const Station: Class<Model<StationModel>> = sequelize.define(\n  \"Station\",\n  {},\n)\n\nexport const Hangar: Class<Model<HangarModel>> = sequelize.define(\n  \"Hangar\",\n  {}\n)\n\nUser.hasOne(Ship, { as: \"activeShip\" })\nUser.hasMany(Hangar, { as: \"hangars\" })\n\nShip.belongsTo(Body, { as: \"body\" })\nShip.belongsTo(Inventory, { as: \"inventory\" })\nShip.belongsTo(ShipType, { as: \"shipType\" })\nShip.belongsTo(Hangar, { as: \"hangar\" })\n\nItem.belongsTo(Inventory, { as: \"inventory\" })\nInventory.hasMany(Item, { as: \"items\" })\n\nItem.belongsTo(ItemType, { as: \"itemType\" })\n\nStation.hasMany(Hangar, { as: \"hangars\" })\n\nHangar.belongsTo(Station, { as: \"station\" })\nHangar.belongsTo(User, { as: \"user\" })\nHangar.hasMany(Ship, { as: \"ships\" })\n\nexport type Db = {\n  sequelize: Sequelize,\n  User: Class<Model<UserModel>>,\n  Body: Class<Model<BodyModel>>,\n  ShipType: Class<Model<ShipTypeModel>>,\n  Ship: Class<Model<ShipModel>>,\n  Inventory: Class<Model<InventoryModel>>,\n  ItemType: Class<Model<ItemTypeModel>>,\n  Item: Class<Model<ItemModel>>,\n  Station: Class<Model<StationModel>>,\n  Hangar: Class<Model<HangarModel>>,\n}\n","// @flow\n\nconst path = require(\"path\")\nconst remotedev = require(\"remotedev-server\")\n\nrequire(\"dotenv\").config()\nrequire(\"source-map-support/register\")\n\nremotedev({ hostname: \"localhost\", port: 9001 })\nrequire(\"./server\")\n","// @flow\n\nimport { Loop, Users, Physics, getUserBody } from \"@subspace/core\"\n\nimport * as Async from \"../../util/async\"\n\nimport type { Action, Dispatch, Middleware, State } from \"../../types\"\nimport type { SpatialIndex } from \"../../cache/types\"\n\nconst UPDATE_AREA = 1000\nconst halfUpdateArea = 0.5 * UPDATE_AREA\n\n// Actions\n\nexport const ADJACENT_BODIES_UPDATE = \"adjacent-bodies/update\"\nexport type AdjacentBodiesUpdate = {\n  type: \"adjacent-bodies/update\",\n  payload: {\n    adjacentBodies: { [number]: number[] },\n  },\n}\n\nexport type AdjacentBodiesAction = AdjacentBodiesUpdate\n\n// Action creators\n\nexport function updateAdjacentBodies(adjacentBodies: {\n  [number]: number[],\n}) {\n  return {\n    type: ADJACENT_BODIES_UPDATE,\n    payload: {\n      adjacentBodies,\n    },\n  }\n}\n\n// Reducer\n\nexport type AdjacentBodiesState = {\n  byUserId: { [number]: number[] },\n}\n\nconst initialAdjacentBodiesState = {\n  byUserId: {},\n}\n\nexport default function reducer(\n  state: AdjacentBodiesState = initialAdjacentBodiesState,\n  action: Action,\n) {\n  switch (action.type) {\n    case ADJACENT_BODIES_UPDATE:\n      return {\n        ...state,\n        byUserId: {\n          ...state.byUserId,\n          ...action.payload.adjacentBodies,\n        },\n      }\n    default:\n      return state\n  }\n}\n\n// Selectors\n\nexport const getAdjacentBodies = (state: AdjacentBodiesState) =>\n  state.byUserId\n\n// Middleware\n\nasync function queryAdjacentBodies(\n  state: State,\n  index: SpatialIndex,\n) {\n  const users = Users.getUsers(state.users)\n  const userIds = Object.keys(users)\n  const query = userIds.reduce((a, userId) => {\n    const body = getUserBody(state, Number(userId))\n\n    if (body === null) {\n      return a\n    }\n\n    const { position: [x, y] } = body\n    const range = [\n      [x - halfUpdateArea, x + halfUpdateArea],\n      [y - halfUpdateArea, y + halfUpdateArea],\n    ]\n\n    a[userId] = index\n      .query(range)\n      .then(res => res.map(([, bodyId]) => bodyId))\n\n    return a\n  }, {})\n\n  return await Async.object(query)\n}\n\nexport function createMiddleware(index: SpatialIndex): Middleware {\n  return store => next => action => {\n    switch (action.type) {\n      // Recreate the map of adjacent bodies each tick\n      case Loop.LOOP_TICK: {\n        queryAdjacentBodies(store.getState(), index).then(result => {\n          next(updateAdjacentBodies(result))\n        })\n        break\n      }\n      case Physics.PHYSICS_ADD_BODY:\n        index.insert(\n          action.payload.body.position,\n          action.payload.body.id,\n        )\n        break\n      case Physics.PHYSICS_UPDATE_BODY:\n        index.update(\n          action.payload.body.position,\n          action.payload.body.id,\n        )\n        break\n      default:\n        break\n    }\n\n    return next(action)\n  }\n}\n","// @flow\n\nimport shortid from \"shortid\"\nimport { Users as CoreUsers, Protocol } from \"@subspace/core\"\n\nimport type { Connection, Server as UdpServer } from \"@web-udp/server\"\nimport type {\n  AuthCredentials,\n  User,\n  ServerMessage,\n} from \"@subspace/core\"\nimport * as Users from \"../users\"\nimport type { Action, Middleware } from \"../../types\"\nimport type { ClientId, Client } from \"../../model/client\"\nimport type { AuthClient } from \"../../auth\"\n\n// Actions\n\nexport const CLIENT_ADD = \"client/add\"\nexport type ClientAdd = {\n  type: \"client/add\",\n  payload: {\n    client: Client,\n  },\n}\n\nexport const CLIENT_SEND = \"client/send!\"\nexport type ClientSend = {\n  type: \"client/send!\",\n  payload: {\n    clientId: ClientId,\n    message: ServerMessage,\n  },\n}\n\nexport const CLIENT_REMOVE = \"client/remove!\"\nexport type ClientRemove = {\n  type: \"client/remove!\",\n  payload: {\n    clientId: ClientId,\n  },\n}\n\nexport type ClientAction = ClientAdd | ClientSend | ClientRemove\n\n// Action creators\n\nexport function addClient(client: Client) {\n  return {\n    type: CLIENT_ADD,\n    payload: {\n      client,\n    },\n  }\n}\n\nexport function sendClient(\n  clientId: ClientId,\n  message: ServerMessage,\n) {\n  return {\n    type: CLIENT_SEND,\n    payload: {\n      clientId,\n      message,\n    },\n  }\n}\n\nexport function removeClient(clientId: ClientId) {\n  return {\n    type: CLIENT_REMOVE,\n    payload: {\n      clientId,\n    },\n  }\n}\n\n// Reducers\n\nexport type State = {\n  byId: { [ClientId]: Client },\n  byUserId: { [number]: Client },\n}\n\nconst initialState = {\n  byId: {},\n  byUserId: {},\n}\n\nexport default function reducer(\n  state: State = initialState,\n  action: Action,\n) {\n  switch (action.type) {\n    case CLIENT_ADD: {\n      const { client } = action.payload\n      const byId = {\n        ...state.byId,\n        [client.id]: client,\n      }\n\n      let byUserId = state.byUserId\n\n      if (client.userId) {\n        byUserId = {\n          ...byUserId,\n          [client.userId]: client,\n        }\n      }\n\n      return {\n        ...state,\n        byId,\n        byUserId,\n      }\n    }\n    case CLIENT_REMOVE: {\n      const { clientId } = action.payload\n      const client = getClient(state, clientId)\n      const nextState = { ...state }\n\n      delete nextState.byId[clientId]\n\n      if (client.userId) {\n        delete nextState.byUserId[client.userId]\n      }\n\n      return nextState\n    }\n    default:\n      return state\n  }\n}\n\n// Selectors\n\nexport const getClient = (state: State, clientId: ClientId) =>\n  state.byId[clientId]\n\nexport const getClientByUserId = (state: State, userId: number) =>\n  state.byUserId[userId]\n\n// Middleware\n\nexport function createMiddleware(\n  udp: UdpServer,\n  auth: AuthClient,\n): Middleware {\n  const connections: { [string]: Connection } = {}\n\n  const listen = (\n    connection: Connection,\n    clientId: ClientId,\n    dispatch: Dispatch,\n  ) => {\n    // Remove client from store on connection close\n    connection.closed.subscribe(() => {\n      dispatch(removeClient(clientId))\n    })\n    // Subscribe to client messages\n    connection.messages.subscribe(async data => {\n      const message = JSON.parse(data)\n      const [type] = message\n\n      switch (type) {\n        default:\n          return console.error(`Unrecognized message: ${data}`)\n      }\n    })\n  }\n\n  return store => {\n    udp.connections.subscribe(async connection => {\n      let user\n\n      try {\n        user = await auth.verify(connection.metadata.token)\n      } catch (err) {\n        console.error(\n          `Invalid credentials for connection ${connection.id}`,\n        )\n        connection.send(\n          JSON.stringify(Protocol.authTokenInvalidMessage()),\n        )\n        connection.close()\n        return\n      }\n\n      const { dispatch } = store\n      const clientId = shortid()\n\n      dispatch(\n        addClient({\n          id: clientId,\n          userId: user.id,\n          connectionId: connection.id,\n        }),\n      )\n\n      connections[connection.id] = connection\n      listen(connection, clientId, dispatch)\n    })\n\n    return next => action => {\n      switch (action.type) {\n        case CLIENT_SEND: {\n          const { clients } = store.getState()\n          const { clientId, message } = action.payload\n          const { connectionId } = getClient(clients, clientId)\n\n          connections[connectionId].send(JSON.stringify(message))\n\n          break\n        }\n        case CLIENT_REMOVE: {\n          const { clientId } = action.payload\n          const { clients } = store.getState()\n          const { connectionId } = getClient(clients, clientId)\n\n          connections[connectionId].close()\n          delete connections[connectionId]\n\n          break\n        }\n        default:\n          break\n      }\n\n      return next(action)\n    }\n  }\n}\n","// @flow\n\nimport type {\n  ShipId,\n  Ship,\n  ShipState as CoreShipState,\n} from \"@subspace/core\"\nimport {\n  Ships as CoreShips,\n  Users as CoreUsers,\n  Physics,\n  Protocol,\n} from \"@subspace/core\"\n\nimport * as Clients from \"../clients\"\nimport * as Users from \"../users\"\nimport type { Db } from \"../../data\"\nimport type { Action, Dispatch, Middleware } from \"../../types\"\n\n// Actions\n\nexport const SHIP_LOAD = \"ships/load!\"\nexport type ShipLoad = {\n  type: \"ships/load!\",\n  payload: {\n    shipId: number,\n  },\n}\n\nexport const SHIP_LOAD_FAILURE = \"ships/load_failure\"\nexport type ShipLoadFailure = {\n  type: \"ships/load_failure\",\n  payload: {\n    shipId: number,\n    err: Error,\n  },\n}\n\nexport const SHIP_LOAD_SUCCESS = \"ships/load_success\"\nexport type ShipLoadSuccess = {\n  type: \"ships/load_success\",\n  payload: {\n    ship: Ship,\n  },\n}\n\nexport type ShipAction = ShipLoad | ShipLoadFailure | ShipLoadSuccess\n\n// Action creators\n\nexport function loadShip(shipId: number) {\n  return {\n    type: SHIP_LOAD,\n    payload: {\n      shipId,\n    },\n  }\n}\n\nexport function loadShipFailure(shipId: number, err: Error) {\n  return {\n    type: SHIP_LOAD_FAILURE,\n    payload: {\n      shipId,\n      err,\n    },\n  }\n}\n\nexport function loadShipSuccess(ship: Ship) {\n  return {\n    type: SHIP_LOAD_SUCCESS,\n    payload: {\n      ship,\n    },\n  }\n}\n\n// Reducer\n\nexport type ShipState = $Supertype<CoreShipState>\n\nexport default function reducer(state: ShipState, action: Action) {\n  return CoreShips.default(state, action)\n}\n\n// Middleware\n\nexport function createMiddleware(db: Db): Middleware {\n  return store => next => action => {\n    switch (action.type) {\n      case SHIP_LOAD: {\n        const { shipId } = action.payload\n        // Hydrate a user from db and create entities if they don't exist\n        // (e.g. user ship)\n        db.Ship.findById(shipId)\n          .then(model => {\n            if (!model) {\n              throw new Error(`Ship ${shipId} not found.`)\n            }\n\n            const ship = model.toJSON()\n\n            next(loadShipSuccess(ship))\n            next(CoreShips.addShip(ship))\n\n            if (ship.body) {\n              next(Physics.addBody(ship.body))\n            }\n          })\n          .catch(err => next(loadShipFailure(shipId, err)))\n        break\n      }\n      case CoreShips.SHIP_ADD:\n      case CoreShips.SHIP_UPDATE: {\n        const { clients, users } = store.getState()\n        const { ship } = action.payload\n        const user = CoreUsers.getUserByActiveShipId(users, ship.id)\n\n        if (!user) {\n          break\n        }\n\n        const client = Clients.getClientByUserId(clients, user.id)\n        const message = Protocol.shipUpdateMessage(ship)\n\n        // Send updated user state to client\n        store.dispatch(Clients.sendClient(client.id, message))\n\n        break\n      }\n      default:\n        break\n    }\n\n    return next(action)\n  }\n}\n","// @flow\n\nimport type {\n  UserState as CoreUserState,\n} from \"@subspace/core\"\n\nimport {\n  Loop,\n  Users as CoreUsers,\n  Ships as CoreShips,\n  Physics,\n  Protocol,\n} from \"@subspace/core\"\n\nimport type { ClientId } from \"../clients\"\n\nimport * as Ships from \"../ships\"\nimport * as Clients from \"../clients\"\nimport * as AdjacentBodies from \"../adjacent-bodies\"\nimport * as Hrtime from \"../../util/hrtime\"\n\nimport type { Db } from \"../../data\"\nimport type { Action, Dispatch, Middleware } from \"../../types\"\n\n// Actions\n\nexport const USER_REGISTER = \"users/register!\"\nexport type UserRegister = {\n  type: \"users/register!\",\n  payload: {\n    clientId: ClientId,\n    username: string,\n    password: string,\n  },\n}\n\nexport const USER_LOAD = \"users/load!\"\nexport type UserLoad = {\n  type: \"users/load!\",\n  payload: {\n    userId: number,\n  },\n}\n\nexport const USER_LOAD_FAILURE = \"users/load_failure\"\nexport type UserLoadFailure = {\n  type: \"users/load_failure\",\n  payload: {\n    userId: number,\n    err: Error,\n  },\n}\n\nexport const USER_LOAD_SUCCESS = \"users/load_success\"\nexport type UserLoadSuccess = {\n  type: \"users/load_success\",\n  payload: {\n    userId: number,\n  },\n}\n\nexport type UserAction =\n  | UserRegister\n  | UserLoad\n  | UserLoadFailure\n  | UserLoadSuccess\n\n// Action creators\n\nexport function registerUser(username: string, password: string) {\n  return {\n    type: USER_REGISTER,\n    payload: {\n      clientId,\n      username,\n      password,\n    },\n  }\n}\n\nexport function loadUser(userId: number) {\n  return {\n    type: USER_LOAD,\n    payload: {\n      userId,\n    },\n  }\n}\n\nexport function loadUserFailure(userId: number, err: Error) {\n  return {\n    type: USER_LOAD_FAILURE,\n    payload: {\n      userId,\n      err,\n    },\n  }\n}\n\nexport function loadUserSuccess(userId: number) {\n  return {\n    type: USER_LOAD_SUCCESS,\n    payload: {\n      userId,\n    },\n  }\n}\n\n// Reducer\n\nexport type UserState = $Supertype<CoreUserState>\n\nexport default function reducer(state: UserState, action: Action) {\n  return CoreUsers.default(state, action)\n}\n\n// Middleware\n\nexport function createMiddleware(\n  db: Db,\n  sendRate: number,\n): Middleware {\n  return store => {\n    const sendStateUpdates = Hrtime.throttle(() => {\n      const {\n        adjacentBodies,\n        clients,\n        users,\n        physics,\n        loop,\n      } = store.getState()\n      const adjacentBodiesByUserId = AdjacentBodies.getAdjacentBodies(\n        adjacentBodies,\n      )\n\n      for (const userId in CoreUsers.getUsers(users)) {\n        const id = Number(userId)\n        const client = Clients.getClientByUserId(clients, id)\n        const bodies = adjacentBodiesByUserId[id].map(bodyId =>\n          Physics.getBody(physics, bodyId),\n        )\n        const message = Protocol.snapshotMessage(loop.frame, bodies)\n\n        store.dispatch(Clients.sendClient(client.id, message))\n      }\n    }, sendRate)\n\n    return next => action => {\n      switch (action.type) {\n        case Loop.LOOP_TICK: {\n          sendStateUpdates()\n          break\n        }\n        case USER_REGISTER: {\n          const { clientId, username, password } = action.payload\n\n          db.User.create({ username, password })\n            .then(model => {\n              const user = model.toJSON()\n              const message = Protocol.userRegisterSuccessMessage()\n\n              next(Clients.sendClient(clientId, message))\n            })\n            .catch(err => {\n              const message = Protocol.userRegisterFailureMessage()\n\n              next(Clients.sendClient(clientId, message))\n            })\n        }\n        case USER_LOAD: {\n          const { userId } = action.payload\n          // Hydrate a user from db and create entities if they don't exist\n          // (e.g. user ship)\n          db.User.findById(userId)\n            .then(model => {\n              if (!model) {\n                throw new Error(`User ${userId} not found`)\n              }\n\n              const user = model.toJSON()\n\n              next(loadUserSuccess(userId))\n              next(CoreUsers.addUser(user))\n\n              if (user.activeShip) {\n                next(CoreShips.addShip(user.activeShip))\n              }\n            })\n            .catch(e => next(loadUserFailure(userId, e)))\n          break\n        }\n        case CoreUsers.USER_ADD:\n        case CoreUsers.USER_UPDATE: {\n          const { clients } = store.getState()\n          const { user } = action.payload\n          const client = Clients.getClientByUserId(clients, user.id)\n          const message = Protocol.userUpdateMessage(user)\n\n          // Send updated user state to client\n          next(Clients.sendClient(client.id, message))\n\n          break\n        }\n        default:\n          break\n      }\n\n      return next(action)\n    }\n  }\n}\n","// @flow\n\nimport { reducers as coreReducers } from \"@subspace/core\"\n\nimport adjacentBodies from \"./modules/adjacent-bodies\"\nimport clients from \"./modules/clients\"\nimport users from \"./modules/users\"\nimport ships from \"./modules/ships\"\n\nconst { loop, physics } = coreReducers\n\nconst reducers = {\n  adjacentBodies,\n  clients,\n  users,\n  ships,\n  loop,\n  physics,\n}\n\nexport default reducers\n\nexport type Reducers = $Subtype<typeof reducers>\n","// @flow\n\nimport express from \"express\"\nimport { User } from \"../data\"\nimport { generateToken } from \"../auth/jwt\"\nimport { auth, login } from \"../auth/middleware\"\n\nconst router = express.Router()\n\nrouter.route(\"/register\").post(async (req, res) => {\n  let { username, password } = req.body\n\n  if (await User.findOne({ where: { username } })) {\n    res.status(409).json({ error: \"Username already taken\" })\n    return\n  }\n\n  let model\n\n  try {\n    model = await User.create({ username, password })\n  } catch (error) {\n    res.status(400).json({ error })\n    return\n  }\n\n  const user = model.toJSON()\n\n  res.status(201).json({\n    token: generateToken(user),\n    user,\n  })\n})\n\nrouter.route(\"/login\").post(login, (req, res) => {\n  const { user: { id, username } } = req\n  const user = { id, username }\n\n  res.status(200).json({\n    token: generateToken(user),\n    user,\n  })\n})\n\nrouter.route(\"/verify\").post(auth, (req, res) => {\n  const { user: { id, username } } = req\n  const user = { id, username }\n\n  res.status(200).json({\n    token: generateToken(user),\n    user,\n  })\n})\n\nexport default router\n","// @flow\n\nimport * as Hrtime from \"./util/hrtime\"\n\nexport function create(rate: number): () => Promise<number> {\n  const nsPerTick = rate * Hrtime.NS_PER_SEC\n  const hrTimeStep = [0, nsPerTick]\n\n  let previous = process.hrtime()\n\n  function timeoutHandler(done) {\n    return () => {\n      const diff = process.hrtime(previous)\n      const delta = Hrtime.sub(diff, hrTimeStep)\n      const d = Hrtime.sum(delta)\n\n      if (d < 0) {\n        setImmediate(timeoutHandler(done))\n        return\n      }\n\n      done((d + nsPerTick) / Hrtime.NS_PER_SEC)\n\n      previous = Hrtime.add(process.hrtime(), delta)\n    }\n  }\n\n  return () =>\n    new Promise(resolve => {\n      setTimeout(timeoutHandler(resolve))\n    })\n}\n","// @flow\n\nimport { createServer } from \"http\"\nimport * as Udp from \"@web-udp/server\"\nimport { Loop } from \"@subspace/core\"\n\nimport type { Connection } from \"@web-udp/server\"\nimport type { UserId, UserMessage } from \"@subspace/core\"\n\nimport express from \"express\"\nimport passport from \"passport\"\nimport body from \"body-parser\"\n\nimport serverConfig from \"../cfg/server.config.json\"\nimport db from \"./data\"\nimport { configureStore } from \"./store\"\nimport { authenticate, verify } from \"./auth\"\nimport { jwt, local } from \"./auth/strategy\"\nimport authRouter from \"./routers/auth\"\n\nconst { TICK_RATE, SEND_RATE, PORT } = process.env\n\nconst tickRate = 1 / (Number(TICK_RATE) || serverConfig.tick_rate)\nconst sendRate = 1 / (Number(SEND_RATE) || serverConfig.send_rate)\n\nconst app = express()\nconst server = new createServer(app)\nconst udp = new Udp.Server({ server })\n\n// passport\npassport.use(jwt)\npassport.use(local)\n\n// middleware\napp.use(body())\n\n// routes\napp.use(\"/auth\", authRouter)\n\nasync function main() {\n  const store = configureStore({\n    auth: { authenticate, verify },\n    db,\n    tickRate,\n    sendRate,\n    udp,\n  })\n\n  store.dispatch(Loop.startLoop())\n  console.log(\"syncing database\")\n  await db.sequelize.sync()\n\n  console.log(`server listening at //localhost:${String(PORT)}`)\n\n  server.listen(Number(PORT))\n}\n\nmain()\n","// @flow\n\nimport { Loop, Physics, Ships as CoreShips } from \"@subspace/core\"\n\nimport { createStore, combineReducers, applyMiddleware } from \"redux\"\nimport { composeWithDevTools } from \"remote-redux-devtools\"\n\nimport type { Connection, Server as UdpServer } from \"@web-udp/server\"\nimport type { AuthClient } from \"../auth\"\nimport type { Db } from \"../data\"\n\nimport redisConfig from \"../../cfg/redis.config\"\nimport * as Scheduler from \"../scheduler\"\nimport { SpatialIndex } from \"../cache\"\nimport * as Clients from \"../modules/clients\"\nimport * as Ships from \"../modules/ships\"\nimport * as Users from \"../modules/users\"\nimport * as AdjacentBodies from \"../modules/adjacent-bodies\"\nimport reducers from \"../reducers\"\n\nimport type { Store } from \"../types\"\n\ntype ConfigureStoreOptions = {\n  db: Db,\n  auth: AuthClient,\n  tickRate: number,\n  sendRate: number,\n  udp: UdpServer,\n}\n\nconst physicsDriver = Physics.P2Driver.create({\n  gravity: [0, 0],\n})\n\nconst spatialIndex = SpatialIndex.create({\n  redis: redisConfig,\n  key: \"ss-body\",\n  dimensions: 2,\n})\n\nconst composeEnhancers = composeWithDevTools({\n  port: 9001,\n  actionsBlacklist: [\n    Loop.LOOP_TICK,\n    Physics.PHYSICS_UPDATE_BODY,\n    AdjacentBodies.ADJACENT_BODIES_UPDATE,\n  ],\n})\n\nexport function configureStore(\n  options: ConfigureStoreOptions,\n): Store {\n  const { db, auth, tickRate, sendRate, udp } = options\n\n  const scheduler = Scheduler.create(tickRate)\n\n  const enhancers = [\n    applyMiddleware(\n      // Core game loop\n      Loop.createMiddleware(scheduler),\n      // Handles loading of ships and sending model updates to client\n      Ships.createMiddleware(db),\n      // Handles ship actions like thrust, turning, etc\n      CoreShips.createMiddleware(),\n      // Manages spatial index and queries the index each tick\n      AdjacentBodies.createMiddleware(spatialIndex),\n      // Handles loading of users and sending model updates to client\n      Users.createMiddleware(db, sendRate),\n      // Handles authentication of new connections and sending of messages\n      Clients.createMiddleware(udp, auth),\n    ),\n  ]\n\n  const rootReducer = combineReducers(reducers)\n  const store = createStore(\n    rootReducer,\n    composeEnhancers(...enhancers),\n  )\n\n  return store\n}\n","const zipObject = (keys = [], values = []) =>\n  keys.reduce((a, key, index) => {\n    a[key] = values[index]\n    return a\n  }, {})\n\nexport function object(obj: {}) {\n  const keys = Object.keys(obj)\n  return Promise.all(\n    keys.map(key => {\n      const value = obj[key]\n\n      if (typeof value === \"object\" && !value.then) {\n        return promiseAllObject(value)\n      }\n\n      return value\n    }),\n  ).then(result => zipObject(keys, result))\n}\n","// @flow\n\nexport const NS_PER_SEC = 1e9\n\ntype Hrtime = [number, number]\n\nexport function add(t1: Hrtime, t2: Hrtime) {\n  return [t1[0] + t2[0], t1[1] + t2[1]]\n}\n\nexport function sub(t1: Hrtime, t2: Hrtime) {\n  return [t1[0] - t2[0], t1[1] - t2[1]]\n}\n\nexport function sum(t: Hrtime) {\n  return t[0] * NS_PER_SEC + t[1]\n}\n\nexport function throttle(fn: Function, rate: number) {\n  const nsPerTick = rate * NS_PER_SEC\n  const hrTimeStep = [0, nsPerTick]\n\n  let t0 = process.hrtime()\n  let prevResult\n\n  return (...args: any[]) => {\n    // Get a high resolution diff\n    const diff = process.hrtime(t0)\n    // Subtract a full step from the diff\n    const delta = sub(diff, hrTimeStep)\n    // Convert to nanoseconds\n    const d = sum(delta)\n\n    if (d >= 0) {\n      t0 = add(process.hrtime(), delta)\n      prevResult = fn(...args)\n    }\n\n    return prevResult\n  }\n}\n","module.exports = require(\"@babel/runtime/helpers/asyncToGenerator\");","module.exports = require(\"@babel/runtime/helpers/defineProperty\");","module.exports = require(\"@babel/runtime/helpers/interopRequireDefault\");","module.exports = require(\"@babel/runtime/helpers/interopRequireWildcard\");","module.exports = require(\"@babel/runtime/helpers/objectSpread\");","module.exports = require(\"@babel/runtime/helpers/slicedToArray\");","module.exports = require(\"@babel/runtime/helpers/toConsumableArray\");","module.exports = require(\"@babel/runtime/helpers/typeof\");","module.exports = require(\"@babel/runtime/regenerator\");","module.exports = require(\"@subspace/core\");","module.exports = require(\"@web-udp/server\");","module.exports = require(\"bcrypt\");","module.exports = require(\"body-parser\");","module.exports = require(\"dotenv\");","module.exports = require(\"express\");","module.exports = require(\"http\");","module.exports = require(\"jsonwebtoken\");","module.exports = require(\"passport\");","module.exports = require(\"passport-jwt\");","module.exports = require(\"passport-local\");","module.exports = require(\"path\");","module.exports = require(\"redis\");","module.exports = require(\"redux\");","module.exports = require(\"remote-redux-devtools\");","module.exports = require(\"remotedev-server\");","module.exports = require(\"sequelize\");","module.exports = require(\"sequelize-cockroachdb\");","module.exports = require(\"shortid\");","module.exports = require(\"source-map-support/register\");","module.exports = require(\"util-promisifyall\");"],"sourceRoot":""}
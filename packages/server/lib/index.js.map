{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./cfg/db.config.js","webpack:///./cfg/index.js","webpack:///./cfg/redis.config.js","webpack:///./src/auth/index.js","webpack:///./src/auth/jwt.js","webpack:///./src/auth/middleware.js","webpack:///./src/auth/strategy.js","webpack:///./src/auth/util.js","webpack:///./src/cache/index.js","webpack:///./src/cache/spatial-index.js","webpack:///./src/data/index.js","webpack:///./src/index.js","webpack:///./src/reducers.js","webpack:///./src/routers/async.js","webpack:///./src/routers/auth.js","webpack:///./src/server.js","webpack:///./src/state/epics/adjacent-bodies/index.js","webpack:///./src/state/epics/clients/index.js","webpack:///./src/state/epics/ships/index.js","webpack:///./src/state/epics/users/index.js","webpack:///./src/state/modules/adjacent-bodies/action-creators.js","webpack:///./src/state/modules/adjacent-bodies/action-types.js","webpack:///./src/state/modules/adjacent-bodies/index.js","webpack:///./src/state/modules/adjacent-bodies/reducer.js","webpack:///./src/state/modules/adjacent-bodies/selectors.js","webpack:///./src/state/modules/clients/action-creators.js","webpack:///./src/state/modules/clients/action-types.js","webpack:///./src/state/modules/clients/index.js","webpack:///./src/state/modules/clients/reducer.js","webpack:///./src/state/modules/clients/selectors.js","webpack:///./src/state/modules/index.js","webpack:///./src/state/modules/ships/action-creators.js","webpack:///./src/state/modules/ships/action-types.js","webpack:///./src/state/modules/ships/index.js","webpack:///./src/state/modules/ships/reducer.js","webpack:///./src/state/modules/users/action-creators.js","webpack:///./src/state/modules/users/action-types.js","webpack:///./src/state/modules/users/index.js","webpack:///./src/state/modules/users/reducer.js","webpack:///./src/state/store.js","webpack:///./src/util/async.js","webpack:///external \"@babel/runtime/helpers/interopRequireDefault\"","webpack:///external \"@babel/runtime/helpers/interopRequireWildcard\"","webpack:///external \"@babel/runtime/helpers/objectSpread\"","webpack:///external \"@subspace/core\"","webpack:///external \"@subspace/redimension\"","webpack:///external \"@subspace/redux-module\"","webpack:///external \"@web-udp/server\"","webpack:///external \"bcrypt\"","webpack:///external \"body-parser\"","webpack:///external \"dotenv\"","webpack:///external \"express\"","webpack:///external \"http\"","webpack:///external \"joi\"","webpack:///external \"jsonwebtoken\"","webpack:///external \"passport\"","webpack:///external \"passport-jwt\"","webpack:///external \"passport-local\"","webpack:///external \"path\"","webpack:///external \"redis\"","webpack:///external \"redux\"","webpack:///external \"redux-observable\"","webpack:///external \"remote-redux-devtools\"","webpack:///external \"remotedev-server\"","webpack:///external \"rxjs/observable/from\"","webpack:///external \"rxjs/observable/fromPromise\"","webpack:///external \"rxjs/observable/interval\"","webpack:///external \"rxjs/observable/of\"","webpack:///external \"rxjs/operators\"","webpack:///external \"sequelize\"","webpack:///external \"sequelize-cockroachdb\"","webpack:///external \"shortid\"","webpack:///external \"source-map-support/register\"","webpack:///external \"util-promisifyall\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_sequelize","_interopRequireDefault","_","username","password","database","host","port","DbConfig","dialect","retry","match","Sequelize","ConnectionError","ConnectionRefusedError","ConnectionTimedOutError","_joi","PORT","DB_HOST","DB_PORT","DB_NAME","DB_USERNAME","DB_PASSWORD","NODE_ENV","JWT_SECRET","JWT_EXPIRE","REDIS_HOST","REDIS_PORT","TICK_RATE","SEND_RATE","process","env","joi","string","hostname","required","alpha","alphanum","schema","valid","unknown","result","validate","error","Error","EnvConfig","node","String","AppConfig","Number","JwtConfig","secret","expire","RedisConfig","GameConfig","tickRate","sendRate","family","db","enableReadyCheck","retry_strategy","options","code","total_retry_time","attempt","Math","min","async","token","Util","authenticate","_jwt","verifyToken","_interopRequireWildcard","_cfg","user","generateToken","jwt","verify","expiresIn","sign","_jsonwebtoken","passport","auth","session","login","_passportJwt","_passportLocal","_util","_data","jwtOptions","jwtFromRequest","ExtractJwt","fromAuthHeaderAsBearerToken","secretOrKey","local","LocalStrategy","done","err","JwtStrategy","payload","User","findById","id","toJSON","model","findOne","where","comparePassword","_bcrypt","bcrypt","compare","SpatialIndex","_redis","_utilPromisifyall","_redimension","default","redis","RedisClient","Multi","config","client","createClient","dimensions","precision","_sequelizeCockroachdb","configs","sequelize","define","STRING","beforeCreate","salt","genSalt","hash","encryptPassword","Body","angle","FLOAT","angularVelocity","positionX","positionY","velocityX","velocityY","width","height","ShipType","Ship","Inventory","ItemType","Item","Station","Hangar","hasOne","as","hasMany","belongsTo","remotedev","on","exit","_core","_reduxModule","reduxModules","coreReducers","extractReducers","Async","Loop","Physics","Ships","Users","localReducers","reducers","fn","req","res","next","Promise","resolve","catch","_express","_auth","_middleware","_async","router","express","Router","register","body","status","json","route","post","loginMiddleware","authMiddleware","_http","Udp","_passport","_bodyParser","_store","_strategy","_auth2","app","server","createServer","udp","Server","use","authRouter","configureStore","dispatch","start","sync","console","log","listen","main","index","$action","store","ofType","TICK","map","state","users","getUsers","query","keys","reduce","results","userId","getUserBody","position","x","y","range","halfUpdateArea","then","bodyId","queryAdjacentBodies","getState","mapTo","AdjacentBodies","update","ADD_BODY","do","insert","ignoreElements","UPDATE_BODY","_modules","connections","action$","subscribe","connection","metadata","send","Protocol","serialize","authTokenInvalidMessage","close","clientId","_shortid","Clients","add","connectionId","closed","remove","messages","data","message","deserialize","type","SEND","getClient","REMOVE","LOAD","shipId","fulfillLoad","rejectLoad","ADD","UPDATE","ship","getUserByActiveShipId","getClientByUserId","shipUpdateMessage","pipe","_reduxObservable","_operators","throttleTime","switchMap","snapshots","adjacentBodies","clients","physics","loop","adjacentBodiesByUserId","getAdjacentBodies","bodies","getBody","snapshotMessage","frame","getSnapshots","_from","from","_fromPromise","fromPromise","catchError","_of","of","activeShip","push","addShip","action","_actionTypes","actionCreators","selectors","_reducer","createReduxModule","actionTypes","reducer","initialState","_objectSpread2","byUserId","byId","[object Object]","_selectors","nextState","_adjacentBodies","_clients","_ships","_users","LOAD_FULFILLED","LOAD_REJECTED","toAsync","ships","composeReduxModules","REGISTER","epicMiddleware","createEpicMiddleware","combineEpics","_adjacentBodies2","spatialIndex","coreEpics","enhancers","_redux","applyMiddleware","rootReducer","combineReducers","createStore","composeEnhancers","_remoteReduxDevtools","_cache","_reducers","redisConfig","composeWithDevTools","actionsBlacklist","obj","all","promiseAllObject","zipObject","values","a","require"],"mappings":"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AAzY,EAAAD,QAAA0Y,QAAA,2DCAAzY,EAAAD,QAAA0Y,QAAA,yCCAAzY,EAAAD,QAAA0Y,QAAA,uCCAAzY,EAAAD,QAAA0Y,QAAA,qCCAAzY,EAAAD,QAAA0Y,QAAA,iCCAAzY,EAAAD,QAAA0Y,QAAA,+BCAAzY,EAAAD,QAAA0Y,QAAA,2BCAAzY,EAAAD,QAAA0Y,QAAA,mCCAAzY,EAAAD,QAAA0Y,QAAA,wCCAAzY,EAAAD,QAAA0Y,QAAA,0CCAAzY,EAAAD,QAAA0Y,QAAA,gDCAAzY,EAAAD,QAAA0Y,QAAA,sCCAAzY,EAAAD,QAAA0Y,QAAA,6BCAAzY,EAAAD,QAAA0Y,QAAA,8BCAAzY,EAAAD,QAAA0Y,QAAA,2CCAAzY,EAAAD,QAAA0Y,QAAA,2DCAAzY,EAAAD,QAAA0Y,QAAA,2DCAAzY,EAAAD,QAAA0Y,QAAA,0DCAAzY,EAAAD,QAAA0Y,QAAA,qECAAzY,EAAAD,QAAA0Y,QAAA,yECAAzY,EAAAD,QAAA0Y,QAAA,gECAAzY,EAAAD,QAAA0Y,QAAA,sDCAAzY,EAAAD,QAAA0Y,QAAA,2CCAAzY,EAAAD,QAAA0Y,QAAA,oDCAAzY,EAAAD,QAAA0Y,QAAA,gDCAAzY,EAAAD,QAAA0Y,QAAA,wDCAAzY,EAAAD,QAAA0Y,QAAA,kECAAzY,EAAAD,QAAA0Y,QAAA","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","// @flow\n\nimport Sequelize from \"sequelize\"\n\nimport { DbConfig } from \".\"\n\nconst { username, password, database, host, port } = DbConfig\n\nconst retry = {\n  match: [\n    Sequelize.ConnectionError,\n    Sequelize.ConnectionRefusedError,\n    Sequelize.ConnectionTimedOutError,\n  ],\n}\n\nexport default {\n  username,\n  password,\n  database,\n  host,\n  port,\n  dialect: \"postgres\",\n  retry,\n}\n","// @flow\n\nimport joi from \"joi\"\n\nconst {\n  PORT,\n  DB_HOST,\n  DB_PORT,\n  DB_NAME,\n  DB_USERNAME,\n  DB_PASSWORD,\n  NODE_ENV,\n  JWT_SECRET,\n  JWT_EXPIRE,\n  REDIS_HOST,\n  REDIS_PORT,\n  TICK_RATE,\n  SEND_RATE,\n} = process.env\n\nconst host = joi\n  .string()\n  .hostname()\n  .required()\nconst alpha = joi\n  .string()\n  .alphanum()\n  .required()\n\nconst schema = joi\n  .schema({\n    PORT: alpha,\n    DB_HOST: host,\n    DB_PORT: alpha,\n    DB_NAME: alpha,\n    DB_USERNAME: alpha,\n    DB_PASSWORD: alpha,\n    NODE_ENV: joi\n      .string()\n      .valid(\"production\", \"development\")\n      .required(),\n    JWT_SECRET: alpha,\n    JWT_EXPIRE: alpha,\n    REDIS_HOST: host,\n    REDIS_PORT: alpha,\n    TICK_RATE: alpha,\n    SEND_RATE: alpha,\n  })\n  .unknown(true)\n\nconst result = joi.validate(process.env, schema)\n\nif (result.error) {\n  throw new Error(\n    `Invalid environment configuration: ${result.error}`,\n  )\n}\n\nexport const EnvConfig = {\n  node: String(NODE_ENV),\n}\n\nexport const AppConfig = {\n  port: Number(PORT),\n}\n\nexport const DbConfig = {\n  host: String(DB_HOST),\n  port: Number(DB_PORT),\n  database: String(DB_NAME),\n  username: String(DB_USERNAME),\n  password: String(DB_PASSWORD),\n}\n\nexport const JwtConfig = {\n  secret: String(JWT_SECRET),\n  expire: String(JWT_EXPIRE),\n}\n\nexport const RedisConfig = {\n  host: String(REDIS_HOST),\n  port: Number(REDIS_PORT),\n}\n\nexport const GameConfig = {\n  tickRate: Number(TICK_RATE),\n  sendRate: Number(SEND_RATE),\n}\n","// @flow\n\nimport { RedisConfig } from \".\"\n\nconst { port, host } = RedisConfig\n\nexport default {\n  port,\n  host,\n  family: \"IPv4\",\n  db: 0,\n  enableReadyCheck: true,\n  retry_strategy: (options: Object) => {\n    if (options.error && options.error.code === \"ECONNREFUSED\") {\n      // End reconnecting on a specific error and flush all commands with\n      // a individual error\n      return new Error(\"The server refused the connection\")\n    }\n    if (options.total_retry_time > 1000 * 60 * 60) {\n      // End reconnecting after a specific timeout and flush all commands\n      // with a individual error\n      return new Error(\"Retry time exhausted\")\n    }\n    if (options.attempt > 10) {\n      // End reconnecting with built in error\n      return\n    }\n    // reconnect after\n    return Math.min(options.attempt * 100, 3000)\n  },\n}\n","// @flow\n\nimport type { User, UserData } from \"../model/user\"\n\nimport * as Util from \"./util\"\nimport { generateToken, verifyToken } from \"./jwt\"\n\nimport { JwtConfig } from \"../../cfg\"\n\nconst { secret, expire } = JwtConfig\n\nexport type AuthClient = {\n  authenticate: (\n    username: string,\n    password: string,\n  ) => Promise<string>,\n  verify: string => Promise<UserData>,\n}\n\nexport async function authenticate(\n  username: string,\n  password: string,\n) {\n  const user = await Util.authenticate(username, password)\n\n  return token(user)\n}\n\nexport async function verify(token: string): Promise<UserData> {\n  return verifyToken(token, secret)\n}\n\nexport async function token(user: UserData) {\n  return generateToken(user, secret, expire)\n}\n","// @flow\n\nimport jwt from \"jsonwebtoken\"\n\nimport type { UserData } from \"../model/user\"\n\nexport function verifyToken(token: string, secret: string): UserData {\n  return jwt.verify(token, secret)\n}\n\nexport function generateToken(\n  user: UserData,\n  secret: string,\n  expiresIn: string,\n) {\n  return jwt.sign(user, secret, {\n    expiresIn,\n  })\n}\n","// @flow\n\nconst passport = require(\"passport\")\n\nexport const auth = passport.authenticate(\"jwt\", { session: false })\nexport const login = passport.authenticate(\"local\", {\n  session: false,\n})\n","// @flow\n\nimport { Strategy as JwtStrategy, ExtractJwt } from \"passport-jwt\"\nimport LocalStrategy from \"passport-local\"\n\nimport { authenticate } from \"./util\"\nimport { User } from \"../data\"\n\nconst { JWT_SECRET } = process.env\n\nconst jwtOptions = {\n  jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n  secretOrKey: JWT_SECRET,\n}\n\nexport const local = new LocalStrategy(\n  async (username: string, password: string, done: Function) => {\n    let user\n\n    try {\n      user = await authenticate(username, password)\n    } catch (err) {\n      return done(err)\n    }\n\n    return done(null, user)\n  },\n)\n\nexport const jwt = new JwtStrategy(\n  jwtOptions,\n  async (payload, done) => {\n    let user\n\n    try {\n      user = await User.findById(payload.id)\n    } catch (err) {\n      return done(err)\n    }\n\n    if (user) {\n      done(null, user.toJSON())\n    } else {\n      done(null, false)\n    }\n  },\n)\n","// @flow\n\nimport bcrypt from \"bcrypt\"\nimport type { User as UserModel } from \"../model/user\"\n\nimport { User } from \"../data\"\n\nexport function comparePassword(password: string, user: UserModel) {\n  return bcrypt.compare(password, user.password)\n}\n\nexport async function authenticate(\n  username: string,\n  password: string,\n) {\n  let model = await User.findOne({ where: { username } })\n\n  if (!model) {\n    throw new Error(\"Invalid username or password\")\n  }\n\n  let user = model.toJSON()\n\n  if (!await comparePassword(password, user)) {\n    throw new Error(\"Invalid username or password\")\n  }\n\n  return user\n}\n","// @flow\n\nimport * as SpatialIndex from \"./spatial-index\"\n\nexport { SpatialIndex }\n","// @flow\n\nimport redis from \"redis\"\nimport promisifyAll from \"util-promisifyall\"\nimport { Physics } from \"@subspace/core\"\nimport redimension from \"@subspace/redimension\"\n\nimport type { CreateOptions } from \"redis\"\n\nimport type { Middleware } from \"../types\"\n\npromisifyAll(redis.RedisClient.prototype)\npromisifyAll(redis.Multi.prototype)\n\ntype CreateIndexOptions = {\n  redis: CreateOptions,\n  key: string,\n  dimensions: number,\n  precision?: number,\n}\n\nexport const create = (config: CreateIndexOptions) => {\n  const client = redis.createClient(config.redis)\n  const { key, dimensions, precision = 64 } = config\n\n  return redimension(client, key, `${key}-map`, dimensions, precision)\n}\n","// @flow\n\nimport bcrypt from \"bcrypt\"\nimport type { Model } from \"sequelize-cockroachdb\"\nimport Sequelize from \"sequelize-cockroachdb\"\n\nimport type {\n  Body as BodyModel,\n  Ship as ShipModel,\n  ShipType as ShipTypeModel,\n  Station as StationModel,\n  Hangar as HangarModel,\n  Inventory as InventoryModel,\n  Item as ItemModel,\n  ItemType as ItemTypeModel,\n} from \"@subspace/core\"\n\nimport { EnvConfig } from \"../../cfg\"\nimport configs from \"../../cfg/db.config\"\nimport type { User as UserModel } from \"../model/user\"\n\nasync function encryptPassword(password: String) {\n  const salt = await bcrypt.genSalt(10)\n  const hash = await bcrypt.hash(password, salt, null)\n\n  return hash\n}\n\nconst config = configs[EnvConfig.node]\n\nexport const sequelize = new Sequelize(config)\n\nexport const User: Class<Model<UserModel>> = sequelize.define(\n  \"User\",\n  {\n    username: Sequelize.STRING,\n    password: Sequelize.STRING,\n  },\n)\n\nUser.beforeCreate(async (user: any) => {\n  user.password = await encryptPassword(user.password)\n})\n\nexport const Body: Class<Model<BodyModel>> = sequelize.define(\n  \"Body\",\n  {\n    angle: Sequelize.FLOAT,\n    angularVelocity: Sequelize.FLOAT,\n    positionX: Sequelize.FLOAT,\n    positionY: Sequelize.FLOAT,\n    velocityX: Sequelize.FLOAT,\n    velocityY: Sequelize.FLOAT,\n    width: Sequelize.FLOAT,\n    height: Sequelize.FLOAT,\n  },\n)\n\nexport const ShipType: Class<Model<ShipTypeModel>> = sequelize.define(\n  \"ShipType\",\n  {\n    name: Sequelize.STRING,\n  },\n)\n\nexport const Ship: Class<Model<ShipModel>> = sequelize.define(\n  \"Ship\",\n  {},\n)\n\nexport const Inventory: Class<\n  Model<InventoryModel>,\n> = sequelize.define(\"Inventory\", {})\n\nexport const ItemType: Class<Model<ItemTypeModel>> = sequelize.define(\n  \"ItemType\",\n  {\n    name: Sequelize.STRING,\n  },\n)\n\nexport const Item: Class<Model<ItemModel>> = sequelize.define(\n  \"Item\",\n  {},\n)\n\nexport const Station: Class<Model<StationModel>> = sequelize.define(\n  \"Station\",\n  {},\n)\n\nexport const Hangar: Class<Model<HangarModel>> = sequelize.define(\n  \"Hangar\",\n  {},\n)\n\nUser.hasOne(Ship, { as: \"activeShip\" })\nUser.hasMany(Hangar, { as: \"hangars\" })\n\nShip.belongsTo(Body, { as: \"body\" })\nShip.belongsTo(Inventory, { as: \"inventory\" })\nShip.belongsTo(ShipType, { as: \"shipType\" })\nShip.belongsTo(Hangar, { as: \"hangar\" })\n\nItem.belongsTo(Inventory, { as: \"inventory\" })\nInventory.hasMany(Item, { as: \"items\" })\n\nItem.belongsTo(ItemType, { as: \"itemType\" })\n\nStation.hasMany(Hangar, { as: \"hangars\" })\n\nHangar.belongsTo(Station, { as: \"station\" })\nHangar.belongsTo(User, { as: \"user\" })\nHangar.hasMany(Ship, { as: \"ships\" })\n\nexport type Db = {\n  sequelize: Sequelize,\n  User: Class<Model<UserModel>>,\n  Body: Class<Model<BodyModel>>,\n  ShipType: Class<Model<ShipTypeModel>>,\n  Ship: Class<Model<ShipModel>>,\n  Inventory: Class<Model<InventoryModel>>,\n  ItemType: Class<Model<ItemTypeModel>>,\n  Item: Class<Model<ItemModel>>,\n  Station: Class<Model<StationModel>>,\n  Hangar: Class<Model<HangarModel>>,\n}\n","// @flow\n\nconst path = require(\"path\")\nconst remotedev = require(\"remotedev-server\")\n\nrequire(\"dotenv\").config()\nrequire(\"source-map-support/register\")\n\nremotedev({ hostname: \"0.0.0.0\", port: 9001 })\nrequire(\"./server\")\n\n// this is necessary to kill remotedev-server\nprocess.on(\"SIGUSR2\", () => process.exit(0))\n","// @flow\n\nimport { Async, Loop, Physics, Ships, Users } from \"@subspace/core\"\nimport { extractReducers } from \"@subspace/redux-module\"\n\nimport * as reduxModules from \"./state/modules\"\n\nconst coreReducers = extractReducers({\n  Async,\n  Loop,\n  Physics,\n  Ships,\n  Users,\n})\nconst localReducers = extractReducers(reduxModules)\n\nconst reducers = {\n  ...coreReducers,\n  ...localReducers,\n}\n\nexport default reducers\n\nexport type Reducers = $Subtype<typeof reducers>\n","// @flow\n\nimport type { $Request, $Response } from \"express\"\n\nexport default function asyncMiddleware(fn: Function) {\n  return (req: $Request, res: $Response, next: Function) => {\n    Promise.resolve(fn(req, res, next)).catch(next)\n  }\n}\n","// @flow\n\nimport express from \"express\"\nimport { User } from \"../data\"\nimport { token } from \"../auth\"\nimport {\n  auth as authMiddleware,\n  login as loginMiddleware,\n} from \"../auth/middleware\"\nimport asyncMiddleware from \"./async\"\n\nconst router = express.Router()\n\nconst register = asyncMiddleware(async (req, res) => {\n  let { username, password } = req.body\n\n  if (await User.findOne({ where: { username } })) {\n    res.status(409).json({ error: \"Username already taken\" })\n    return\n  }\n\n  let model\n\n  try {\n    model = await User.create({ username, password })\n  } catch (error) {\n    res.status(400).json({ error })\n    return\n  }\n\n  const user = model.toJSON()\n\n  res.status(201).json({\n    token: token(user),\n    user,\n  })\n})\n\nfunction login(req, res, next: Function) {\n  const { user: { id, username } } = req\n  const user = { id, username }\n\n  res.status(200).json({\n    token: token(user),\n    user,\n  })\n}\n\nfunction verify(req, res, next: Function) {\n  const { user: { id, username } } = req\n  const user = { id, username }\n\n  res.status(200).json({\n    token: token(user),\n    user,\n  })\n}\n\nrouter.route(\"/register\").post(register)\n\nrouter.route(\"/login\").post(loginMiddleware, login)\n\nrouter.route(\"/verify\").post(authMiddleware, verify)\n\nexport default router\n","// @flow\n\nimport { createServer } from \"http\"\nimport * as Udp from \"@web-udp/server\"\nimport { Loop } from \"@subspace/core\"\nimport type { Connection } from \"@web-udp/server\"\nimport express from \"express\"\nimport passport from \"passport\"\nimport { json } from \"body-parser\"\n\nimport * as db from \"./data\"\nimport { AppConfig, GameConfig } from \"../cfg\"\nimport { configureStore } from \"./state/store\"\nimport * as auth from \"./auth\"\nimport { jwt, local } from \"./auth/strategy\"\nimport authRouter from \"./routers/auth\"\n\nconst app = express()\nconst server = new createServer(app)\nconst udp = new Udp.Server({ server })\n\n// passport\npassport.use(jwt)\npassport.use(local)\n\n// middleware\napp.use(json())\n\n// routes\napp.use(\"/auth\", authRouter)\n\nasync function main() {\n  const store = configureStore({\n    auth,\n    db,\n    tickRate: 1 / GameConfig.tickRate,\n    sendRate: 1 / GameConfig.sendRate,\n    udp,\n  })\n\n  store.dispatch(Loop.start())\n\n  await db.sequelize.sync()\n\n  console.log(\n    `server listening at //localhost:${String(AppConfig.port)}`,\n  )\n\n  server.listen(Number(AppConfig.port))\n}\n\nmain()\n","// @flow\n\nimport type { ActionsObservable } from \"redux-observable\"\nimport type { Redimension } from \"@subspace/redimension\"\n\nimport { Loop, Users, Physics, getUserBody } from \"@subspace/core\"\n\nimport * as Async from \"../../../util/async\"\n\nimport type { Action, Store, State } from \"../../../types\"\nimport { AdjacentBodies } from \"../../modules\"\n\nconst UPDATE_AREA = 1000\nconst halfUpdateArea = 0.5 * UPDATE_AREA\n\nasync function queryAdjacentBodies(state: State, index: Redimension) {\n  const users = Users.getUsers(state)\n  const userIds = Object.keys(users)\n  const query = userIds.reduce((results, userId) => {\n    const body = getUserBody(state, Number(userId))\n\n    if (body === null) {\n      return results\n    }\n\n    const { position: [x, y] } = body\n    const range = [\n      [x - halfUpdateArea, x + halfUpdateArea],\n      [y - halfUpdateArea, y + halfUpdateArea],\n    ]\n\n    results[userId] = index\n      .query(range)\n      .then(res => res.map(([, bodyId]) => bodyId))\n\n    return results\n  }, {})\n\n  return await Async.object(query)\n}\n\nexport default function(index: Redimension) {\n  function query($action: ActionsObservable<Action>, store: Store) {\n    return $action\n      .ofType(Loop.TICK)\n      .map(() => queryAdjacentBodies(store.getState(), index))\n      .mapTo(result => AdjacentBodies.update(result))\n  }\n\n  function insert($action: ActionsObservable<Action>, store: Store) {\n    return $action\n      .ofType(Physics.ADD_BODY)\n      .do(({ payload: { body: { position, id } } }) =>\n        index.insert(position, id),\n      )\n      .ignoreElements()\n  }\n\n  function update($action: ActionsObservable<Action>, store: Store) {\n    return $action\n      .ofType(Physics.UPDATE_BODY)\n      .do(({ payload: { body: { position, id } } }) =>\n        index.update(position, id),\n      )\n      .ignoreElements()\n  }\n\n  return [query, insert, update]\n}\n","// @flow\n\nimport shortid from \"shortid\"\nimport type { ActionObservable } from \"redux-observable\"\nimport type { Connection, UdpServer } from \"@web-udp/server\"\nimport { Protocol } from \"@subspace/core\"\n\nimport type { Action, Store } from \"../../../types\"\nimport type { AuthClient } from \"../../../auth\"\nimport { Clients } from \"../../modules\"\n\nexport default function(udp: UdpServer, auth: AuthClient) {\n  const connections = {}\n\n  function connect(action$: ActionObservable<Action>, store: Store) {\n    function listen(connection: Connection, clientId: string) {\n      // Remove client from store on connection close\n      connection.closed.subscribe(() =>\n        store.dispatch(Clients.remove(clientId)),\n      )\n      // Subscribe to client messages\n      connection.messages.subscribe(data => {\n        const message = Protocol.deserialize(data)\n        const [type] = message\n\n        switch (type) {\n          default:\n            return console.error(`Unrecognized message type ${type}`)\n        }\n      })\n\n      return action$.ignoreElements()\n    }\n\n    async function onConnection(connection: Connection) {\n      let user\n      const { id } = connection\n\n      try {\n        user = await auth.verify(connection.metadata.token)\n      } catch (err) {\n        console.error(\n          `Invalid credentials for connection ${connection.id}`,\n        )\n        connection.send(\n          Protocol.serialize(Protocol.authTokenInvalidMessage()),\n        )\n        connection.close()\n        return\n      }\n\n      const clientId = shortid()\n\n      connections[id] = connection\n\n      if (!user.id) {\n        return\n      }\n\n      store.dispatch(\n        Clients.add({\n          id: clientId,\n          userId: user.id,\n          connectionId: id,\n        }),\n      )\n\n      listen(connection, clientId)\n    }\n\n    udp.connections.subscribe(onConnection)\n  }\n\n  function send(action$: ActionObservable<Action>, store: Store) {\n    return action$\n      .ofType(Clients.SEND)\n      .do(({ payload: { clientId, message } }) => {\n        const { connectionId } = Clients.getClient(\n          store.getState(),\n          clientId,\n        )\n\n        connections[connectionId].send(Protocol.serialize(message))\n      })\n      .ignoreElements()\n  }\n\n  function remove(action$: ActionObservable<Action>, store: Store) {\n    return action$\n      .ofType(Clients.REMOVE)\n      .do(({ payload: { clientId } }) => {\n        const { connectionId } = Clients.getClient(\n          store.getState(),\n          clientId,\n        )\n\n        connections[connectionId].close()\n        delete connections[connectionId]\n      })\n      .ignoreElements()\n  }\n\n  return [connect, send, remove]\n}\n","// @flow\n\nimport type { ActionObservable } from \"redux-observable\"\nimport { Protocol } from \"@subspace/core\"\n\nimport type { Db } from \"../../../data\"\nimport type { Action, Store } from \"../../../types\"\nimport { Clients, Users, Ships } from \"../../modules\"\n\nexport default function(db: Db) {\n  function load(action$: ActionObservable<Action>, store: Store) {\n    return action$\n      .ofType(Ships.LOAD)\n      .mapTo(({ payload: { shipId } }) =>\n        db.Ship.findById(shipId)\n          .then(model => {\n            if (!model) {\n              throw new Error(`Ship ${shipId} not found.`)\n            }\n            return Ships.fulfillLoad(model.toJSON())\n          })\n          .catch(error => Ships.rejectLoad(shipId, error)),\n      )\n  }\n\n  function addOrUpdate(\n    action$: ActionObservable<Action>,\n    store: Store,\n  ) {\n    return action$\n      .ofType(Ships.ADD, Ships.UPDATE)\n      .mapTo(({ payload: { ship } }) => {\n        const state = store.getState()\n        const user = Users.getUserByActiveShipId(state, ship.id)\n        const client = Clients.getClientByUserId(state, user.id)\n        const message = Protocol.shipUpdateMessage(ship)\n\n        // Send updated user state to client\n        return Clients.send(client.id, message)\n      })\n  }\n\n  return [load, addOrUpdate]\n}\n","// @flow\n\nimport { Loop, Physics, Protocol } from \"@subspace/core\"\nimport { ofType } from \"redux-observable\"\nimport type { ActionsObservable } from \"redux-observable\"\nimport { from } from \"rxjs/observable/from\"\nimport { of } from \"rxjs/observable/of\"\nimport { interval } from \"rxjs/observable/interval\"\nimport { fromPromise } from \"rxjs/observable/fromPromise\"\nimport {\n  throttleTime,\n  mapTo,\n  tap,\n  map,\n  switchMap,\n  catchError,\n} from \"rxjs/operators\"\n\nimport type { Action, State, Store } from \"../../../types\"\nimport type { Db } from \"../../../data\"\nimport { AdjacentBodies, Clients, Ships, Users } from \"../../modules\"\n\nexport default function(db: Db, sendRate: number) {\n  function getSnapshots(state: State) {\n    const { adjacentBodies, clients, users, physics, loop } = state\n\n    const adjacentBodiesByUserId = AdjacentBodies.getAdjacentBodies(\n      state,\n    )\n\n    const userIds = Object.keys(Users.getUsers(users))\n\n    return userIds.map(userId => {\n      const id = Number(userId)\n      const client = Clients.getClientByUserId(state, id)\n      const bodies = adjacentBodiesByUserId[id].map(bodyId =>\n        Physics.getBody(physics, bodyId),\n      )\n      const message = Protocol.snapshotMessage(loop.frame, bodies)\n\n      return Clients.send(client.id, message)\n    })\n  }\n\n  function snapshots(\n    action$: ActionsObservable<Action>,\n    store: Store,\n  ) {\n    return action$.pipe(\n      ofType(Loop.TICK),\n      throttleTime(sendRate),\n      switchMap(() => {\n        const snapshots = getSnapshots(store.getState())\n\n        return from(snapshots)\n      }),\n    )\n  }\n\n  function loadUser(\n    action$: ActionsObservable<Action>,\n    store: Store,\n  ) {\n    return action$.pipe(\n      ofType(Users.LOAD),\n      switchMap(({ payload: { userId } }) =>\n        fromPromise(db.User.findById(userId)).pipe(\n          map(model => {\n            if (!model) {\n              throw new Error(`User ${userId} not found`)\n            }\n            return model.toJSON()\n          }),\n          catchError(error => of(Users.rejectLoad(userId, error))),\n        ),\n      ),\n      switchMap(user => {\n        const next = [Users.fulfillLoad(user)]\n\n        if (user.activeShip) {\n          next.push(Ships.addShip(user.activeShip))\n        }\n\n        return from(next)\n      }),\n    )\n  }\n\n  function sendUser(\n    action$: ActionsObservable<Action>,\n    store: Store,\n  ) {\n    return action$.pipe(\n      ofType(Users.ADD, Users.UPDATE),\n      mapTo(action => {\n        const { payload: { user } } = action\n        const client = Clients.getClientByUserId(\n          store.getState(),\n          user.id,\n        )\n\n        return Clients.send(client.id, action)\n      }),\n    )\n  }\n\n  return [snapshots, loadUser, sendUser]\n}\n","// @flow\n\nimport { UPDATE } from \"./action-types\"\n\nexport function update(adjacentBodies: { [number]: number[] }) {\n  return {\n    type: UPDATE,\n    payload: {\n      adjacentBodies,\n    },\n  }\n}\n","// @flow\n\nexport const UPDATE = \"UPDATE\"\n\nexport type Update = {\n  type: \"UPDATE\",\n  payload: {\n    adjacentBodies: { [number]: number[] },\n  },\n}\n\nexport type Action = Update\nexport default { UPDATE }\n","// @flow\n\nimport { createReduxModule } from \"@subspace/redux-module\"\n\nimport * as actionCreators from \"./action-creators\"\nimport actionTypes from \"./action-types\"\nimport * as selectors from \"./selectors\"\nimport reducer from \"./reducer\"\n\nexport default createReduxModule(\"AdjacentBodies\", {\n  actionTypes,\n  actionCreators,\n  reducer,\n  selectors,\n})\n","// @flow\n\nimport type { Action } from \"./action-types\"\n\nimport { UPDATE } from \"./action-types\"\n\nexport type State = {\n  byUserId: { [number]: number[] },\n}\n\nconst initialState = {\n  byUserId: {},\n}\n\nexport default function reducer(\n  state: State = initialState,\n  action: Action,\n) {\n  switch (action.type) {\n    case UPDATE:\n      return {\n        ...state,\n        byUserId: {\n          ...state.byUserId,\n          ...action.payload.adjacentBodies,\n        },\n      }\n    default:\n      return state\n  }\n}\n","// @flow\n\nimport type { State } from \"./reducer\"\n\nexport const getAdjacentBodies = (state: State) => state.byUserId\n","// @flow\n\nimport type { ServerMessage } from \"@subspace/core\"\n\nimport type { Client } from \"../../../model/client\"\nimport { ADD, SEND, REMOVE } from \"./action-types\"\n\nexport function add(client: Client) {\n  return {\n    type: ADD,\n    payload: {\n      client,\n    },\n  }\n}\n\nexport function send(clientId: string, message: ServerMessage) {\n  return {\n    type: SEND,\n    payload: {\n      clientId,\n      message,\n    },\n  }\n}\n\nexport function remove(clientId: string) {\n  return {\n    type: REMOVE,\n    payload: {\n      clientId,\n    },\n  }\n}\n","// @flow\n\nimport type { ServerMessage } from \"@subspace/core\"\nimport type { Client } from \"../../../model/client\"\n\nexport const ADD = \"ADD\"\nexport type Add = {\n  type: \"ADD\",\n  payload: {\n    client: Client,\n  },\n}\n\nexport const SEND = \"SEND\"\nexport type Send = {\n  type: \"SEND\",\n  payload: {\n    clientId: string,\n    message: ServerMessage,\n  },\n}\n\nexport const REMOVE = \"REMOVE\"\nexport type Remove = {\n  type: \"REMOVE\",\n  payload: {\n    clientId: string,\n  },\n}\n\nexport type Action = Add | Send | Remove\nexport default { ADD, SEND, REMOVE }\n","// @flow\n\nimport { createReduxModule } from \"@subspace/redux-module\"\n\nimport * as actionCreators from \"./action-creators\"\nimport actionTypes from \"./action-types\"\nimport * as selectors from \"./selectors\"\nimport reducer from \"./reducer\"\n\nexport default createReduxModule(\"Clients\", {\n  actionTypes,\n  actionCreators,\n  reducer,\n  selectors,\n})\n","// @flow\n\nimport type { Client } from \"../../../model/client\"\nimport type { Action } from \"./action-types\"\nimport { getClient } from \"./selectors\"\nimport { ADD, REMOVE } from \"./action-types\"\n\nexport type State = {\n  byId: { [string]: Client },\n  byUserId: { [number]: Client },\n}\n\nconst initialState = {\n  byId: {},\n  byUserId: {},\n}\n\nexport default function reducer(\n  state: State = initialState,\n  action: Action,\n) {\n  switch (action.type) {\n    case ADD: {\n      const { client } = action.payload\n      const byId = {\n        ...state.byId,\n        [client.id]: client,\n      }\n\n      let byUserId = state.byUserId\n\n      if (client.userId) {\n        byUserId = {\n          ...byUserId,\n          [client.userId]: client,\n        }\n      }\n\n      return {\n        ...state,\n        byId,\n        byUserId,\n      }\n    }\n    case REMOVE: {\n      const { clientId } = action.payload\n      const client = getClient(state, clientId)\n      const nextState = { ...state }\n      const { userId } = client\n\n      delete nextState.byId[clientId]\n\n      if (userId) {\n        delete nextState.byUserId[userId]\n      }\n\n      return nextState\n    }\n    default:\n      return state\n  }\n}\n","// @flow\n\nimport type { State } from \"./reducer\"\n\nexport const getClient = (state: State, clientId: string) =>\n  state.byId[clientId]\n\nexport const getClientByUserId = (state: State, userId: number) =>\n  state.byUserId[userId]\n","// @flow\n\nimport { default as AdjacentBodies } from \"./adjacent-bodies\"\nimport { default as Clients } from \"./clients\"\nimport { default as Ships } from \"./ships\"\nimport { default as Users } from \"./users\"\n\nexport { AdjacentBodies, Clients, Ships, Users }\n","// @flow\n\nimport type { Ship } from \"@subspace/core\"\n\nimport { LOAD, LOAD_FULFILLED, LOAD_REJECTED } from \"./action-types\"\n\nexport function load(shipId: number) {\n  return {\n    type: LOAD,\n    payload: {\n      shipId,\n    },\n  }\n}\n\nexport function fulfillLoad(ship: Ship) {\n  return {\n    type: LOAD_FULFILLED,\n    payload: {\n      ship,\n    },\n  }\n}\n\nexport function rejectLoad(shipId: number, error: Error) {\n  return {\n    type: LOAD_REJECTED,\n    payload: {\n      shipId,\n    },\n    error,\n  }\n}\n","// @flow\n\nimport type { Ship, ShipAction } from \"@subspace/core\"\nimport { toAsync } from \"@subspace/core\"\n\nexport const [LOAD, LOAD_FULFILLED, LOAD_REJECTED] = toAsync(\"LOAD\")\n\nexport type Load = {\n  type: \"LOAD!\",\n  payload: {\n    shipId: number,\n  },\n}\n\nexport type LoadFulfilled = {\n  type: \"LOAD-\",\n  payload: {\n    shipId: number,\n  },\n  error: Error,\n}\n\nexport type LoadRejected = {\n  type: \"LOAD+\",\n  payload: {\n    ship: Ship,\n  },\n}\n\nexport type Action = ShipAction | Load | LoadFulfilled | LoadRejected\nexport default { LOAD, LOAD_FULFILLED, LOAD_REJECTED }\n","// @flow\n\nimport { Ships } from \"@subspace/core\"\nimport {\n  createReduxModule,\n  composeReduxModules,\n} from \"@subspace/redux-module\"\n\nimport * as actionCreators from \"./action-creators\"\nimport actionTypes from \"./action-types\"\nimport * as selectors from \"./selectors\"\nimport reducer from \"./reducer\"\n\nconst ships = createReduxModule(\"Ships\", {\n  actionTypes,\n  actionCreators,\n  reducer,\n  selectors,\n})\n\nexport default composeReduxModules(Ships, ships)\n","// @flow\n\nimport { Ships } from \"@subspace/core\"\nimport type { ShipState } from \"@subspace/core\"\n\nimport type { Action } from \"./action-types\"\n\nexport type State = ShipState & {}\n\nexport default function reducer(state: State, action: Action) {\n  return state\n}\n","// @flow\n\nimport {\n  REGISTER,\n  LOAD,\n  LOAD_FULFILLED,\n  LOAD_REJECTED,\n} from \"./action-types\"\n\nexport function registerUser(\n  username: string,\n  password: string,\n  clientId: string,\n) {\n  return {\n    type: REGISTER,\n    payload: {\n      username,\n      password,\n      clientId,\n    },\n  }\n}\n\nexport function loadUser(userId: number) {\n  return {\n    type: LOAD,\n    payload: {\n      userId,\n    },\n  }\n}\n\nexport function fulfillLoad(userId: number) {\n  return {\n    type: LOAD_FULFILLED,\n    payload: {\n      userId,\n    },\n  }\n}\n\nexport function rejectLoad(userId: number, err: Error) {\n  return {\n    type: LOAD_REJECTED,\n    payload: {\n      userId,\n      err,\n    },\n  }\n}\n","// @flow\n\nimport type { UserAction } from \"@subspace/core\"\nimport { toAsync } from \"@subspace/core\"\n\nexport const REGISTER = \"REGISTER\"\n\nexport type Register = {\n  type: \"REGISTER\",\n  payload: {\n    clientId: string,\n    username: string,\n    password: string,\n  },\n}\n\nexport const [LOAD, LOAD_FULFILLED, LOAD_REJECTED] = toAsync(\"LOAD\")\n\nexport type Load = {\n  type: \"LOAD\",\n  payload: {\n    userId: number,\n  },\n}\n\nexport type LoadFulfilled = {\n  type: \"LOAD-\",\n  payload: {\n    userId: number,\n    err: Error,\n  },\n}\n\nexport type LoadRejected = {\n  type: \"LOAD+\",\n  payload: {\n    userId: number,\n  },\n}\n\nexport type Action =\n  | UserAction\n  | Register\n  | Load\n  | LoadFulfilled\n  | LoadRejected\nexport default { REGISTER, LOAD, LOAD_FULFILLED, LOAD_REJECTED }\n","// @flow\n\nimport { Users } from \"@subspace/core\"\nimport {\n  createReduxModule,\n  composeReduxModules,\n} from \"@subspace/redux-module\"\n\nimport * as actionCreators from \"./action-creators\"\nimport actionTypes from \"./action-types\"\nimport * as selectors from \"./selectors\"\nimport reducer from \"./reducer\"\n\nconst users = createReduxModule(\"Users\", {\n  actionTypes,\n  actionCreators,\n  reducer,\n  selectors,\n})\n\nexport default composeReduxModules(Users, users)\n","// @flow\n\nimport { Users } from \"@subspace/core\"\nimport type { UserState } from \"@subspace/core\"\n\nimport type { Action } from \"./action-types\"\n\nexport type State = UserState & {}\n\nexport default function reducer(state: State, action: Action) {\n  return state\n}\n","// @flow\n\nimport {\n  Loop,\n  Physics,\n  Ships as CoreShips,\n  epics as coreEpics,\n} from \"@subspace/core\"\nimport { createStore, combineReducers, applyMiddleware } from \"redux\"\nimport { composeWithDevTools } from \"remote-redux-devtools\"\nimport { createEpicMiddleware, combineEpics } from \"redux-observable\"\nimport type { Connection, Server as UdpServer } from \"@web-udp/server\"\n\nimport type { AuthClient } from \"../auth\"\nimport type { Db } from \"../data\"\nimport redisConfig from \"../../cfg/redis.config\"\nimport { SpatialIndex } from \"../cache\"\nimport reducers from \"../reducers\"\nimport AdjacentBodies from \"./modules/adjacent-bodies\"\nimport createClientsEpics from \"./epics/clients\"\nimport createAdjacentBodiesEpics from \"./epics/adjacent-bodies\"\nimport createShipsEpics from \"./epics/ships\"\nimport createUsersEpics from \"./epics/users\"\n\nimport type { Store } from \"../types\"\n\ntype ConfigureStoreOptions = {\n  db: Db,\n  auth: AuthClient,\n  tickRate: number,\n  sendRate: number,\n  udp: UdpServer,\n}\n\nconst spatialIndex = SpatialIndex.create({\n  redis: redisConfig,\n  key: \"ss-body\",\n  dimensions: 2,\n})\n\nconst composeEnhancers = composeWithDevTools({\n  port: 9001,\n  actionsBlacklist: [\n    Loop.TICK,\n    Physics.UPDATE_BODY,\n    AdjacentBodies.UPDATE,\n  ],\n})\n\nexport function configureStore(\n  options: ConfigureStoreOptions,\n): Store {\n  const { db, auth, tickRate, sendRate, udp } = options\n\n  const epicMiddleware = createEpicMiddleware(\n    combineEpics(\n      ...[\n        createAdjacentBodiesEpics(spatialIndex),\n        createClientsEpics(udp, auth),\n        createShipsEpics(db),\n        createUsersEpics(db, sendRate),\n      ],\n      ...coreEpics,\n    ),\n  )\n\n  const enhancers = [applyMiddleware(epicMiddleware)]\n\n  const rootReducer = combineReducers(reducers)\n\n  return createStore(rootReducer, composeEnhancers(...enhancers))\n}\n","const zipObject = (keys = [], values = []) =>\n  keys.reduce((a, key, index) => {\n    a[key] = values[index]\n    return a\n  }, {})\n\nexport function object(obj: {}) {\n  const keys = Object.keys(obj)\n  return Promise.all(\n    keys.map(key => {\n      const value = obj[key]\n\n      if (typeof value === \"object\" && !value.then) {\n        return promiseAllObject(value)\n      }\n\n      return value\n    }),\n  ).then(result => zipObject(keys, result))\n}\n","module.exports = require(\"@babel/runtime/helpers/interopRequireDefault\");","module.exports = require(\"@babel/runtime/helpers/interopRequireWildcard\");","module.exports = require(\"@babel/runtime/helpers/objectSpread\");","module.exports = require(\"@subspace/core\");","module.exports = require(\"@subspace/redimension\");","module.exports = require(\"@subspace/redux-module\");","module.exports = require(\"@web-udp/server\");","module.exports = require(\"bcrypt\");","module.exports = require(\"body-parser\");","module.exports = require(\"dotenv\");","module.exports = require(\"express\");","module.exports = require(\"http\");","module.exports = require(\"joi\");","module.exports = require(\"jsonwebtoken\");","module.exports = require(\"passport\");","module.exports = require(\"passport-jwt\");","module.exports = require(\"passport-local\");","module.exports = require(\"path\");","module.exports = require(\"redis\");","module.exports = require(\"redux\");","module.exports = require(\"redux-observable\");","module.exports = require(\"remote-redux-devtools\");","module.exports = require(\"remotedev-server\");","module.exports = require(\"rxjs/observable/from\");","module.exports = require(\"rxjs/observable/fromPromise\");","module.exports = require(\"rxjs/observable/interval\");","module.exports = require(\"rxjs/observable/of\");","module.exports = require(\"rxjs/operators\");","module.exports = require(\"sequelize\");","module.exports = require(\"sequelize-cockroachdb\");","module.exports = require(\"shortid\");","module.exports = require(\"source-map-support/register\");","module.exports = require(\"util-promisifyall\");"],"sourceRoot":""}
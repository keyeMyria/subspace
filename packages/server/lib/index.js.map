{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./cfg/db.config.js","webpack:///./cfg/redis.config.js","webpack:///./src/auth/index.js","webpack:///./src/cache/index.js","webpack:///./src/cache/redimension.js","webpack:///./src/cache/spatial-index.js","webpack:///./src/data/index.js","webpack:///./src/index.js","webpack:///./src/modules/adjacent-bodies/index.js","webpack:///./src/modules/clients/index.js","webpack:///./src/modules/players/index.js","webpack:///./src/modules/ships/index.js","webpack:///./src/reducers.js","webpack:///./src/scheduler.js","webpack:///./src/store/index.js","webpack:///./src/util/async.js","webpack:///./src/util/hrtime.js","webpack:///external \"@babel/runtime/helpers/asyncToGenerator\"","webpack:///external \"@babel/runtime/helpers/defineProperty\"","webpack:///external \"@babel/runtime/helpers/interopRequireDefault\"","webpack:///external \"@babel/runtime/helpers/interopRequireWildcard\"","webpack:///external \"@babel/runtime/helpers/objectSpread\"","webpack:///external \"@babel/runtime/helpers/slicedToArray\"","webpack:///external \"@babel/runtime/helpers/toConsumableArray\"","webpack:///external \"@babel/runtime/helpers/typeof\"","webpack:///external \"@babel/runtime/regenerator\"","webpack:///external \"@subspace/core\"","webpack:///external \"@web-udp/server\"","webpack:///external \"http\"","webpack:///external \"redis\"","webpack:///external \"redux\"","webpack:///external \"sequelize\"","webpack:///external \"sequelize-cockroachdb\"","webpack:///external \"shortid\"","webpack:///external \"source-map-support/register\"","webpack:///external \"util-promisifyall\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","w","s","Sequelize","process","env","DB_USERNAME","DB_PASSWORD","DB_NAME","DB_HOST","DB_PORT","retry","match","ConnectionError","ConnectionRefusedError","ConnectionTimedOutError","OptimisticLockError","development","username","password","database","host","port","dialect","test","production","family","db","enableReadyCheck","retry_strategy","options","error","code","Error","total_retry_time","attempt","Math","min","check","Promise","resolve","login","reject","SpatialIndex","_interopRequireWildcard","client","key","hashkey","dimensions","precision","arguments","length","undefined","checkDimensions","values","concat","encode","comb","reduce","a","x","bin","toString","padStart","split","zip","interleaved","flatten","arr","res","len","cur","Array","isArray","push","join","int10","buildElementString","id","encoded","appended","_removeById","_asyncToGenerator2","default","_regenerator","mark","_callee","ele","wrap","_context","prev","next","hgetAsync","sent","abrupt","multi","zrem","hdel","stop","this","apply","_update","_callee2","old","_context2","zadd","hset","_queryRaw","_callee3","range","exp","start","end","e","ranges","current","notDone","rangeStart","rangeEnd","_i","_i2","allResults","results","_r2","result","_i4","item","fields","skip","v","_context3","pow","slice","batch","zrangebylex","insert","remove","zremAsync","removeById","_x","update","_x2","_x3","query","ordered","map","deltas","delta","_toConsumableArray2","_loop","size","b","_ret","_x4","_x5","queryRaw","parseInt","cb","execAsync","_redis","_interopRequireDefault","_utilPromisifyall","_redimension","redis","RedisClient","Multi","config","createClient","_config$precision","create","_sequelizeCockroachdb","configs","sequelize","Player","define","STRING","activeShipId","NUMBER","Http","Udp","_core","_data","_serverConfig","_store","Auth","TICK_RATE","SEND_RATE","PORT","tickRate","Number","serverConfig","tick_rate","sendRate","send_rate","server","Server","udp","auth","configureStore","dispatch","Loop","startLoop","sync","then","listen","console","log","String","state","initialAdjacentBodiesState","action","type","ADJACENT_BODIES_UPDATE","_objectSpread2","byPlayerId","payload","adjacentBodies","index","store","LOOP_TICK","queryAdjacentBodies","getState","updateAdjacentBodies","Physics","PHYSICS_ADD_BODY","body","position","PHYSICS_UPDATE_BODY","Async","halfUpdateArea","players","playerIds","Players","getPlayers","keys","playerId","getPlayerBody","_body$position","_slicedToArray2","y","_ref","initialState","CLIENT_ADD","byId","_defineProperty2","_objectSpread6","CLIENT_SET_PLAYER","_action$payload","clientId","getClient","CLIENT_REMOVE","nextState","connections","subscribe","connection","_shortid","messages","data","message","_message","_message$","JSON","parse","Protocol","MESSAGE_TYPE_AUTH_LOGIN","loginClient","t0","addClient","connectionId","CLIENT_LOGIN","_action$payload2","credentials","player","loginClientSuccess","catch","err","loginClientFailure","CLIENT_LOGIN_SUCCESS","_action$payload3","CorePlayers","getPlayer","removeClient","setClientPlayer","loadPlayer","CLIENT_LOGIN_FAILURE","sendClient","authLoginFailureMessage","CLIENT_SEND","_store$getState","clients","_action$payload4","send","stringify","_store$getState2","_getClient","close","PLAYER_LOAD","sendStateUpdates","Hrtime","throttle","physics","loop","adjacentBodiesByPlayerId","AdjacentBodies","getAdjacentBodies","Clients","getClientByPlayerId","bodies","bodyId","getBody","snapshotMessage","frame","loadPlayerSuccess","addPlayer","Ships","loadShip","loadPlayerFailure","PLAYER_ADD","PLAYER_UPDATE","playerUpdateMessage","PLAYER_LOAD_FAILURE","PLAYER_LOAD_SUCCESS","shipId","SHIP_LOAD","CoreShips","getShip","ship","loadShipSuccess","addShip","loadShipFailure","SHIP_ADD","SHIP_UPDATE","getPlayerByActiveShipId","shipUpdateMessage","SHIP_LOAD_FAILURE","SHIP_LOAD_SUCCESS","_adjacentBodies","_clients","_players","_ships","coreReducers","ships","rate","nsPerTick","NS_PER_SEC","hrTimeStep","previous","hrtime","setTimeout","timeoutHandler","done","diff","sub","sum","setImmediate","add","scheduler","Scheduler","enhancers","_redux","applyMiddleware","createMiddleware","spatialIndex","window","__REDUX_DEVTOOLS_EXTENSION__","rootReducer","combineReducers","reducers","createStore","compose","_cache","_reducers","P2Driver","gravity","redisConfig","obj","all","_typeof2","promiseAllObject","zipObject","fn","prevResult","t1","t2","t","require"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading wasm modules\n \tvar installedWasmModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// object with all compiled WebAssembly.Modules\n \t__webpack_require__.w = {};\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","const Sequelize = require(\"sequelize\")\n\nconst { DB_USERNAME, DB_PASSWORD, DB_NAME, DB_HOST, DB_PORT } = process.env\n\nconst retry = {\n  match: [\n    Sequelize.ConnectionError,\n    Sequelize.ConnectionRefusedError,\n    Sequelize.ConnectionTimedOutError,\n    Sequelize.OptimisticLockError,\n  ]\n}\n\nmodule.exports = {\n  development: {\n    username: \"cockroach\",\n    password: null,\n    database: \"ss_dev\",\n    host: \"127.0.0.1\",\n    port: 26257,\n    dialect: \"postgres\",\n    retry,\n  },\n  \"test\": {\n    username: DB_USERNAME,\n    password: DB_PASSWORD,\n    database: DB_NAME,\n    host: DB_HOST,\n    port: DB_PORT,\n    dialect: \"postgres\",\n    retry,\n  },\n  \"production\": {\n    username: DB_USERNAME,\n    password: DB_PASSWORD,\n    database: DB_NAME,\n    host: DB_HOST,\n    port: DB_PORT,\n    dialect: \"postgres\",\n    retry,\n  }\n}\n","export default {\n  port: 6379,\n  host: \"localhost\",\n  family: 4,\n  db: 0,\n  \"enableReadyCheck\": true,\n  retry_strategy: options => {\n    if (options.error && options.error.code === \"ECONNREFUSED\") {\n      // End reconnecting on a specific error and flush all commands with\n      // a individual error\n      return new Error(\"The server refused the connection\")\n    }\n    if (options.total_retry_time > 1000 * 60 * 60) {\n      // End reconnecting after a specific timeout and flush all commands\n      // with a individual error\n      return new Error(\"Retry time exhausted\")\n    }\n    if (options.attempt > 10) {\n      // End reconnecting with built in error\n      return\n    }\n    // reconnect after\n    return Math.min(options.attempt * 100, 3000)\n  }\n}\n","// @flow\n\nimport type { Player, ClientMessage } from \"@subspace/core\"\n\nexport type AuthCredentials = {}\n\nexport type AuthClient = {\n  check: ClientMessage => Promise<boolean>,\n  login: AuthCredentials => Promise<Player>,\n}\n\nexport function create(): AuthClient {\n  const check = () => Promise.resolve(false)\n  const login = () => Promise.reject()\n\n  return {\n    check,\n    login,\n  }\n}\n","// @flow\n\nimport * as SpatialIndex from \"./spatial-index\"\n\nexport { SpatialIndex }\n","// @flow\n\nimport type { RedisClientPromisified } from \"redis\"\n\nimport type { SpatialIndex, Range, Values } from \"./types\"\n\nconst zip = (a: any[], b: any[]) => a.map((x, i) => [x, b[i]])\n\nconst int10 = (a: number | string) => parseInt(a, 10)\n\nfunction flatten(arr, res = []) {\n  const len = arr.length\n  let i = 0\n  let cur\n\n  for (; i < len; i++) {\n    cur = arr[i]\n    if (Array.isArray(cur)) {\n      flatten(cur, res)\n    } else {\n      res.push(cur)\n    }\n  }\n\n  return res\n}\n\nfunction multi(\n  client: RedisClientPromisified,\n  cb: RedisClientPromisified => *,\n) {\n  const m = client.multi()\n\n  cb(m)\n\n  return m.execAsync()\n}\n\nfunction batch(\n  client: RedisClientPromisified,\n  cb: RedisClientPromisified => *,\n) {\n  const b = client.batch()\n\n  cb(b)\n\n  return b.execAsync()\n}\n\nexport function create(\n  client: RedisClientPromisified,\n  key: string,\n  hashkey: string,\n  dimensions: number,\n  precision: number = 64,\n): SpatialIndex {\n  function checkDimensions(values: $ReadOnlyArray<any>) {\n    if (values.length !== dimensions) {\n      throw new Error(\n        `Please always use ${dimensions} dimensions with this index.`,\n      )\n    }\n  }\n\n  function encode(values: Values) {\n    const comb = values.reduce((a, x, i) => {\n      const bin = x\n        .toString(2)\n        .padStart(precision, \"0\")\n        .split(\"\")\n\n      return i === 0 ? bin : zip(a, bin)\n    }, [])\n    const interleaved = flatten(comb).join(\"\")\n\n    return int10(interleaved)\n      .toString(16)\n      .padStart(precision * dimensions / 4, \"0\")\n  }\n\n  function buildElementString(values: Values, id: string) {\n    checkDimensions(values)\n    const encoded = encode(values)\n    const appended = values.reduce((a, x) => `${a}:${x}`, encoded)\n\n    return `${appended}:${id}`\n  }\n\n  function insert(values: Values, id: string) {\n    const ele = buildElementString(values, id)\n\n    return multi(client, m => {\n      m.zadd(key, 0, ele)\n      m.hset(hashkey, id, ele)\n    })\n  }\n\n  function remove(values: Values, id: string) {\n    const ele = buildElementString(values, id)\n\n    return client.zremAsync(key, ele)\n  }\n\n  async function removeById(id: string) {\n    const ele = await client.hgetAsync(hashkey, id)\n\n    if (!ele) {\n      throw new Error(`Element ${id} not found.`)\n    }\n\n    return multi(client, m => {\n      m.zrem(key, ele)\n      m.hdel(hashkey, id)\n    })\n  }\n\n  async function update(values: Values, id: string) {\n    const ele = buildElementString(values, id)\n    const old = await client.hgetAsync(hashkey, id)\n\n    if (!old) {\n      throw new Error(`Element ${id} not found.`)\n    }\n\n    return multi(client, m => {\n      m.zrem(key, old)\n      m.hdel(hashkey, id)\n      m.zadd(key, 0, ele)\n      m.hset(hashkey, id, ele)\n    })\n  }\n\n  async function queryRaw(range: Range[], exp: number) {\n    const start = []\n    const end = []\n    const e = 2 ** exp\n\n    for (let i = 0; i < range.length; i++) {\n      const r = range[i]\n      start.push(int10(r[0] / e))\n      end.push(int10(r[1] / e))\n    }\n\n    const ranges = []\n    const current = start.slice()\n    let notDone = true\n\n    while (notDone) {\n      const rangeStart = []\n      const rangeEnd = []\n\n      for (let i = 0; i < dimensions; i++) {\n        rangeStart.push(int10(current[i] * e))\n        rangeEnd.push(int10(rangeStart[i] | (e - 1)))\n      }\n\n      ranges.push([\n        `[${encode(rangeStart)}:`,\n        `[${encode(rangeEnd)}:\\xff`,\n      ])\n\n      for (let i = 0; i < dimensions; i++) {\n        if (current[i] !== end[i]) {\n          current[i] += 1\n          break\n        } else if (i === dimensions - 1) {\n          notDone = false\n        } else {\n          current[i] = start[i]\n        }\n      }\n    }\n\n    const allResults = await batch(client, p => {\n      for (let i = 0; i < ranges.length; i++) {\n        const r = ranges[i]\n        p.zrangebylex(key, r[0], r[1])\n      }\n    })\n\n    const results = []\n\n    for (let r = 0; r < allResults.length; r++) {\n      const result = allResults[r]\n\n      for (let i = 0; i < result.length; i++) {\n        const item = result[i]\n        const fields = item.split(\":\")\n        let skip = false\n\n        for (let d = 0; d < dimensions; d++) {\n          if (\n            int10(fields[d + 1]) < range[d][0] ||\n            int10(fields[d + 1]) > range[d][1]\n          ) {\n            skip = true\n            break\n          }\n        }\n\n        if (!skip) {\n          const values = []\n          const id = fields[fields.length - 1]\n\n          for (let v = 1; v < fields.length - 1; v++) {\n            values.push(int10(fields[v]))\n          }\n\n          results.push([values, id])\n        }\n      }\n    }\n\n    return results\n  }\n\n  function query(range: Range[]) {\n    checkDimensions(range)\n\n    const ordered = range.map(r => {\n      if (r[0] < r[1]) {\n        return r\n      }\n      return [r[1], r[0]]\n    })\n    const deltas = ordered.map(r => r[1] - r[0] + 1)\n\n    let delta = Math.min(...deltas)\n    let exp = 1\n\n    while (delta > 2) {\n      delta /= 2\n      exp += 1\n    }\n\n    while (true) {\n      const size = 2 ** exp\n      const d = ordered.map(\n        r => int10(r[1] / size) - int10(r[0] / size) + 1,\n      )\n\n      const ranges = d.reduce((a, b) => a * b)\n\n      if (ranges < 20) {\n        break\n      }\n\n      exp += 1\n    }\n\n    return queryRaw(ordered, exp)\n  }\n\n  return {\n    insert,\n    remove,\n    removeById,\n    update,\n    query,\n  }\n}\n","// @flow\n\nimport redis from \"redis\"\nimport promisifyAll from \"util-promisifyall\"\nimport { Physics } from \"@subspace/core\"\n\nimport type { CreateOptions } from \"redis\"\n\nimport type { Middleware } from \"../types\"\nimport { create as createIndex } from \"./redimension\"\nimport type { SpatialIndex } from \"./types\"\n\npromisifyAll(redis.RedisClient.prototype)\npromisifyAll(redis.Multi.prototype)\n\ntype CreateIndexOptions = {\n  redis: CreateOptions,\n  key: string,\n  dimensions: number,\n  precision?: number,\n}\n\nexport const create = (config: CreateIndexOptions) => {\n  const client = redis.createClient(config.redis)\n  const { key, dimensions, precision = 64 } = config\n\n  return createIndex(client, key, `${key}-map`, dimensions, precision)\n}\n","import Sequelize from \"sequelize-cockroachdb\"\nimport configs from \"../../cfg/db.config\"\n\nconst env = process.env.NODE_ENV || \"development\"\nconst config = configs[env]\nconst sequelize = new Sequelize(config.database, config.username, config.password, config)\n\nconst Player = sequelize.define(\"Player\", {\n  username: Sequelize.STRING,\n  password: Sequelize.STRING,\n  activeShipId: Sequelize.NUMBER\n})\n\n// Player.hasOne(models.Ship, { as: \"ActiveShip\", foreignKey: \"activeShipId\" })\n\nexport { sequelize, Player }\n","// @flow\n\nimport \"source-map-support/register\"\n\nimport * as Http from \"http\"\nimport * as Udp from \"@web-udp/server\"\nimport {\n  Loop,\n  Ships,\n  Players,\n  Protocol,\n  getPlayerShip,\n} from \"@subspace/core\"\n\nimport type { Connection } from \"@web-udp/server\"\nimport type { PlayerId, PlayerMessage } from \"@subspace/core\"\n\nimport db from \"./data\"\nimport serverConfig from \"../cfg/server.config.json\"\nimport { configureStore } from \"./store\"\nimport * as Auth from \"./auth\"\n\nconst { TICK_RATE, SEND_RATE, PORT } = process.env\n\nconst tickRate = 1 / (Number(TICK_RATE) || serverConfig.tick_rate)\nconst sendRate = 1 / (Number(SEND_RATE) || serverConfig.send_rate)\n\nconst server = new Http.Server()\nconst udp = new Udp.Server({ server })\nconst auth = Auth.create()\n\nconst store = configureStore({\n  auth,\n  tickRate,\n  sendRate,\n  udp,\n})\n\nstore.dispatch(Loop.startLoop())\n\ndb.sequelize.sync()\n  .then(() => {\n    server.listen(Number(PORT), () => {\n      console.log(`Server listening at //localhost:${String(PORT)}`)\n    })\n  })\n","// @flow\n\nimport { Loop, Players, Physics, getPlayerBody } from \"@subspace/core\"\n\nimport type { PlayerId, BodyId } from \"@subspace/core\"\n\nimport * as Async from \"../../util/async\"\n\nimport type { Action, Dispatch, Middleware, State } from \"../../types\"\nimport type { SpatialIndex } from \"../../cache/types\"\n\nconst UPDATE_AREA = 1000\nconst halfUpdateArea = 0.5 * UPDATE_AREA\n\n// Actions\n\nexport const ADJACENT_BODIES_UPDATE = \"adjacent-bodies/update\"\nexport type AdjacentBodiesUpdate = {\n  type: \"adjacent-bodies/update\",\n  payload: {\n    adjacentBodies: { [PlayerId]: BodyId[] },\n  },\n}\n\nexport type AdjacentBodiesAction = AdjacentBodiesUpdate\n\n// Action creators\n\nexport function updateAdjacentBodies(adjacentBodies: {\n  [PlayerId]: BodyId[],\n}) {\n  return {\n    type: ADJACENT_BODIES_UPDATE,\n    payload: {\n      adjacentBodies,\n    },\n  }\n}\n\n// Reducer\n\nexport type AdjacentBodiesState = {\n  byPlayerId: { [PlayerId]: BodyId[] },\n}\n\nconst initialAdjacentBodiesState = {\n  byPlayerId: {},\n}\n\nexport default function reducer(\n  state: AdjacentBodiesState = initialAdjacentBodiesState,\n  action: Action,\n) {\n  switch (action.type) {\n    case ADJACENT_BODIES_UPDATE:\n      return {\n        ...state,\n        byPlayerId: {\n          ...state.byPlayerId,\n          ...action.payload.adjacentBodies,\n        },\n      }\n    default:\n      return state\n  }\n}\n\n// Selectors\n\nexport const getAdjacentBodies = (state: AdjacentBodiesState) =>\n  state.byPlayerId\n\n// Middleware\n\nasync function queryAdjacentBodies(\n  state: State,\n  index: SpatialIndex,\n) {\n  const players = Players.getPlayers(state.players)\n  const playerIds = Object.keys(players)\n  const query = playerIds.reduce((a, playerId) => {\n    const body = getPlayerBody(state, Number(playerId))\n\n    if (body === null) {\n      return a\n    }\n\n    const { position: [x, y] } = body\n    const range = [\n      [x - halfUpdateArea, x + halfUpdateArea],\n      [y - halfUpdateArea, y + halfUpdateArea],\n    ]\n\n    a[playerId] = index\n      .query(range)\n      .then(res => res.map(([, bodyId]) => bodyId))\n\n    return a\n  }, {})\n\n  return await Async.object(query)\n}\n\nexport function createMiddleware(index: SpatialIndex): Middleware {\n  return store => next => action => {\n    switch (action.type) {\n      // Recreate the map of adjacent bodies each tick\n      case Loop.LOOP_TICK: {\n        queryAdjacentBodies(store.getState(), index).then(result => {\n          next(updateAdjacentBodies(result))\n        })\n        break\n      }\n      case Physics.PHYSICS_ADD_BODY:\n        index.insert(\n          action.payload.body.position,\n          action.payload.body.id,\n        )\n        break\n      case Physics.PHYSICS_UPDATE_BODY:\n        index.update(\n          action.payload.body.position,\n          action.payload.body.id,\n        )\n        break\n      default:\n        break\n    }\n\n    return next(action)\n  }\n}\n","// @flow\n\nimport shortid from \"shortid\"\nimport { Players as CorePlayers, Protocol } from \"@subspace/core\"\n\nimport type { Connection, Server as UdpServer } from \"@web-udp/server\"\nimport type {\n  AuthCredentials,\n  Player,\n  PlayerId,\n  ServerMessage,\n} from \"@subspace/core\"\nimport * as Players from \"../players\"\nimport type { Action, Middleware } from \"../../types\"\nimport type { ClientId, Client } from \"../../model/client\"\nimport type { AuthClient } from \"../../auth\"\n\n// Actions\n\nexport const CLIENT_ADD = \"client/add\"\nexport type ClientAdd = {\n  type: \"client/add\",\n  payload: {\n    client: Client,\n  },\n}\n\nexport const CLIENT_LOGIN = \"client/login!\"\nexport type ClientLogin = {\n  type: \"client/login!\",\n  payload: {\n    clientId: ClientId,\n    credentials: AuthCredentials,\n  },\n}\n\nexport const CLIENT_LOGIN_FAILURE = \"client/login_failure\"\nexport type ClientLoginFailure = {\n  type: \"client/login_failure\",\n  payload: {\n    clientId: ClientId,\n  },\n}\n\nexport const CLIENT_LOGIN_SUCCESS = \"client/login_success\"\nexport type ClientLoginSuccess = {\n  type: \"client/login_success\",\n  payload: {\n    clientId: ClientId,\n    player: Player,\n  },\n}\n\nexport const CLIENT_SET_PLAYER = \"client/set_player\"\nexport type ClientSetPlayer = {\n  type: \"client/set_player\",\n  payload: {\n    clientId: ClientId,\n    playerId: PlayerId,\n  },\n}\n\nexport const CLIENT_SEND = \"client/send!\"\nexport type ClientSend = {\n  type: \"client/send!\",\n  payload: {\n    clientId: ClientId,\n    message: ServerMessage,\n  },\n}\n\nexport const CLIENT_REMOVE = \"client/remove!\"\nexport type ClientRemove = {\n  type: \"client/remove!\",\n  payload: {\n    clientId: ClientId,\n  },\n}\n\nexport type ClientAction =\n  | ClientAdd\n  | ClientLogin\n  | ClientLoginFailure\n  | ClientLoginSuccess\n  | ClientSetPlayer\n  | ClientSend\n  | ClientRemove\n\n// Action creators\n\nexport function addClient(client: Client) {\n  return {\n    type: CLIENT_ADD,\n    payload: {\n      client,\n    },\n  }\n}\n\nexport function loginClient(\n  clientId: ClientId,\n  credentials: AuthCredentials,\n) {\n  return {\n    type: CLIENT_LOGIN,\n    payload: {\n      clientId,\n      credentials,\n    },\n  }\n}\n\nexport function loginClientFailure(clientId: ClientId) {\n  return {\n    type: CLIENT_LOGIN_FAILURE,\n    payload: {\n      clientId,\n    },\n  }\n}\n\nexport function loginClientSuccess(\n  clientId: ClientId,\n  player: Player,\n) {\n  return {\n    type: CLIENT_LOGIN_SUCCESS,\n    payload: {\n      clientId,\n      player,\n    },\n  }\n}\n\nexport function setClientPlayer(\n  clientId: ClientId,\n  playerId: PlayerId,\n) {\n  return {\n    type: CLIENT_SET_PLAYER,\n    payload: {\n      clientId,\n      playerId,\n    },\n  }\n}\n\nexport function sendClient(\n  clientId: ClientId,\n  message: ServerMessage,\n) {\n  return {\n    type: CLIENT_SEND,\n    payload: {\n      clientId,\n      message,\n    },\n  }\n}\n\nexport function removeClient(clientId: ClientId) {\n  return {\n    type: CLIENT_REMOVE,\n    payload: {\n      clientId,\n    },\n  }\n}\n\n// Reducers\n\nexport type State = {\n  byId: { [ClientId]: Client },\n  byPlayerId: { [PlayerId]: Client },\n}\n\nconst initialState = {\n  byId: {},\n  byPlayerId: {},\n}\n\nexport default function reducer(\n  state: State = initialState,\n  action: Action,\n) {\n  switch (action.type) {\n    case CLIENT_ADD: {\n      const { client } = action.payload\n      const byId = {\n        ...state.byId,\n        [client.id]: client,\n      }\n\n      let byPlayerId = state.byPlayerId\n\n      if (client.playerId) {\n        byPlayerId = {\n          ...byPlayerId,\n          [client.playerId]: client,\n        }\n      }\n\n      return {\n        ...state,\n        byId,\n        byPlayerId,\n      }\n    }\n    case CLIENT_SET_PLAYER: {\n      const { clientId, playerId } = action.payload\n      const client = { ...getClient(state, clientId), playerId }\n\n      return {\n        ...state,\n        byId: {\n          ...state.byId,\n          [clientId]: client,\n        },\n        byPlayerId: {\n          ...state.byPlayerId,\n          [playerId]: client,\n        },\n      }\n    }\n    case CLIENT_REMOVE: {\n      const { clientId } = action.payload\n      const client = getClient(state, clientId)\n      const nextState = { ...state }\n\n      delete nextState.byId[clientId]\n\n      if (client.playerId) {\n        delete nextState.byPlayerId[client.playerId]\n      }\n\n      return nextState\n    }\n    default:\n      return state\n  }\n}\n\n// Selectors\n\nexport const getClient = (state: State, clientId: ClientId) =>\n  state.byId[clientId]\n\nexport const getClientByPlayerId = (\n  state: State,\n  playerId: PlayerId,\n) => state.byPlayerId[playerId]\n\n// Middleware\n\nexport function createMiddleware(\n  udp: UdpServer,\n  auth: AuthClient,\n): Middleware {\n  const connections: { [string]: Connection } = {}\n\n  const listen = (\n    connection: Connection,\n    clientId: ClientId,\n    dispatch: Dispatch,\n  ) => {\n    connection.messages.subscribe(async data => {\n      const message = JSON.parse(data)\n      const [, [type, payload]] = message\n\n      if (type === Protocol.MESSAGE_TYPE_AUTH_LOGIN) {\n        return dispatch(loginClient(clientId, payload))\n      }\n\n      if (!await auth.check(message)) {\n        return console.error(\n          `Client ${clientId} is not authenticated`,\n        )\n      }\n\n      switch (type) {\n        default:\n          return console.error(`Unrecognized message: ${data}`)\n      }\n    })\n  }\n\n  return store => {\n    udp.connections.subscribe(connection => {\n      const { dispatch } = store\n      const clientId = shortid()\n\n      connections[connection.id] = connection\n      listen(connection, clientId, dispatch)\n      dispatch(\n        addClient({ id: clientId, connectionId: connection.id }),\n      )\n    })\n\n    return next => action => {\n      switch (action.type) {\n        case CLIENT_LOGIN: {\n          const { clientId, credentials } = action.payload\n\n          auth\n            .login(credentials)\n            .then(player => {\n              next(loginClientSuccess(clientId, player))\n            })\n            .catch(err => {\n              next(loginClientFailure(clientId))\n            })\n\n          break\n        }\n        case CLIENT_LOGIN_SUCCESS: {\n          const { clientId, player } = action.payload\n          const state = store.getState()\n\n          if (CorePlayers.getPlayer(state.players, player.id)) {\n            next(removeClient(clientId))\n            return\n          }\n\n          next(setClientPlayer(clientId, player.id))\n          next(Players.loadPlayer(player.id))\n          break\n        }\n        case CLIENT_LOGIN_FAILURE: {\n          const { clientId } = action.payload\n\n          next(\n            sendClient(clientId, Protocol.authLoginFailureMessage()),\n          )\n          break\n        }\n        case CLIENT_SEND: {\n          const { clients } = store.getState()\n          const { clientId, message } = action.payload\n          const client = getClient(clients, clientId)\n\n          connections[client.connectionId].send(\n            JSON.stringify(message),\n          )\n\n          break\n        }\n        case CLIENT_REMOVE: {\n          const { clientId } = action.payload\n          const { clients } = store.getState()\n          const { connectionId } = getClient(clients, clientId)\n\n          connections[connectionId].close()\n          delete connections[connectionId]\n\n          break\n        }\n        default:\n          break\n      }\n\n      return next(action)\n    }\n  }\n}\n","// @flow\n\nimport type {\n  PlayerId,\n  PlayerState as CorePlayerState,\n} from \"@subspace/core\"\n\nimport {\n  Loop,\n  Players as CorePlayers,\n  Physics,\n  Protocol,\n} from \"@subspace/core\"\n\nimport * as Ships from \"../ships\"\nimport * as Clients from \"../clients\"\nimport * as AdjacentBodies from \"../adjacent-bodies\"\nimport * as Hrtime from \"../../util/hrtime\"\n\nimport type { Action, Dispatch, Middleware } from \"../../types\"\n\n// Actions\n\nexport const PLAYER_LOAD = \"players/load!\"\nexport type PlayerLoad = {\n  type: \"players/load!\",\n  payload: {\n    playerId: PlayerId,\n  },\n}\n\nexport const PLAYER_LOAD_FAILURE = \"players/load_failure\"\nexport type PlayerLoadFailure = {\n  type: \"players/load_failure\",\n  payload: {\n    playerId: PlayerId,\n    err: Error,\n  },\n}\n\nexport const PLAYER_LOAD_SUCCESS = \"players/load_success\"\nexport type PlayerLoadSuccess = {\n  type: \"players/load_success\",\n  payload: {\n    playerId: PlayerId,\n  },\n}\n\nexport type PlayerAction =\n  | PlayerLoad\n  | PlayerLoadFailure\n  | PlayerLoadSuccess\n\n// Action creators\n\nexport function loadPlayer(playerId: PlayerId) {\n  return {\n    type: PLAYER_LOAD,\n    payload: {\n      playerId,\n    },\n  }\n}\n\nexport function loadPlayerFailure(playerId: PlayerId, err: Error) {\n  return {\n    type: PLAYER_LOAD_FAILURE,\n    payload: {\n      playerId,\n      err,\n    },\n  }\n}\n\nexport function loadPlayerSuccess(playerId: PlayerId) {\n  return {\n    type: PLAYER_LOAD_SUCCESS,\n    payload: {\n      playerId,\n    },\n  }\n}\n\n// Reducer\n\nexport type PlayerState = $Supertype<CorePlayerState>\n\nexport default function reducer(state: PlayerState, action: Action) {\n  return CorePlayers.default(state, action)\n}\n\n// Middleware\n\nexport function createMiddleware(\n  db: any,\n  sendRate: number,\n): Middleware {\n  return store => {\n    const sendStateUpdates = Hrtime.throttle(() => {\n      const {\n        adjacentBodies,\n        clients,\n        players,\n        physics,\n        loop,\n      } = store.getState()\n      const adjacentBodiesByPlayerId = AdjacentBodies.getAdjacentBodies(\n        adjacentBodies,\n      )\n\n      for (const playerId in CorePlayers.getPlayers(players)) {\n        const id = Number(playerId)\n        const client = Clients.getClientByPlayerId(clients, id)\n        const bodies = adjacentBodiesByPlayerId[id].map(bodyId =>\n          Physics.getBody(physics, bodyId),\n        )\n        const message = Protocol.snapshotMessage(loop.frame, bodies)\n\n        store.dispatch(Clients.sendClient(client.id, message))\n      }\n    }, sendRate)\n\n    return next => action => {\n      switch (action.type) {\n        case Loop.LOOP_TICK: {\n          sendStateUpdates()\n          break\n        }\n        case PLAYER_LOAD: {\n          const { playerId } = action.payload\n          // Hydrate a player from db and create entities if they don't exist\n          // (e.g. player ship)\n          db\n            .getPlayer(playerId)\n            .then(player => {\n              next(loadPlayerSuccess(playerId))\n              next(CorePlayers.addPlayer(player))\n              if (player.activeShipId) {\n                next(Ships.loadShip(player.activeShipId))\n              }\n            })\n            .catch(e => next(loadPlayerFailure(playerId, e)))\n          break\n        }\n        case CorePlayers.PLAYER_ADD:\n        case CorePlayers.PLAYER_UPDATE: {\n          const { clients } = store.getState()\n          const { player } = action.payload\n          const client = Clients.getClientByPlayerId(\n            clients,\n            player.id,\n          )\n          const message = Protocol.playerUpdateMessage(player)\n\n          // Send updated player state to client\n          store.dispatch(Clients.sendClient(client.id, message))\n\n          break\n        }\n        default:\n          break\n      }\n\n      return next(action)\n    }\n  }\n}\n","// @flow\n\nimport type {\n  ShipId,\n  Ship,\n  ShipState as CoreShipState,\n} from \"@subspace/core\"\nimport {\n  Ships as CoreShips,\n  Players as CorePlayers,\n  Protocol,\n} from \"@subspace/core\"\n\nimport * as Clients from \"../clients\"\nimport * as Players from \"../players\"\nimport type { Action, Dispatch, Middleware } from \"../../types\"\n\n// Actions\n\nexport const SHIP_LOAD = \"ships/load!\"\nexport type ShipLoad = {\n  type: \"ships/load!\",\n  payload: {\n    shipId: ShipId,\n  },\n}\n\nexport const SHIP_LOAD_FAILURE = \"ships/load_failure\"\nexport type ShipLoadFailure = {\n  type: \"ships/load_failure\",\n  payload: {\n    shipId: ShipId,\n    err: Error,\n  },\n}\n\nexport const SHIP_LOAD_SUCCESS = \"ships/load_success\"\nexport type ShipLoadSuccess = {\n  type: \"ships/load_success\",\n  payload: {\n    ship: Ship,\n  },\n}\n\nexport type ShipAction = ShipLoad | ShipLoadFailure | ShipLoadSuccess\n\n// Action creators\n\nexport function loadShip(shipId: ShipId) {\n  return {\n    type: SHIP_LOAD,\n    payload: {\n      shipId,\n    },\n  }\n}\n\nexport function loadShipFailure(shipId: ShipId, err: Error) {\n  return {\n    type: SHIP_LOAD_FAILURE,\n    payload: {\n      shipId,\n      err,\n    },\n  }\n}\n\nexport function loadShipSuccess(ship: Ship) {\n  return {\n    type: SHIP_LOAD_SUCCESS,\n    payload: {\n      ship,\n    },\n  }\n}\n\n// Reducer\n\nexport type ShipState = $Supertype<CoreShipState>\n\nexport default function reducer(state: ShipState, action: Action) {\n  return CoreShips.default(state, action)\n}\n\n// Middleware\n\nexport function createMiddleware(db: any): Middleware {\n  return store => next => action => {\n    switch (action.type) {\n      case SHIP_LOAD: {\n        const { shipId } = action.payload\n        // Hydrate a player from db and create entities if they don't exist\n        // (e.g. player ship)\n        db\n          .getShip(shipId)\n          .then(ship => {\n            next(loadShipSuccess(ship))\n            next(CoreShips.addShip(ship))\n          })\n          .catch(err => next(loadShipFailure(shipId, err)))\n        break\n      }\n      case CoreShips.SHIP_ADD:\n      case CoreShips.SHIP_UPDATE: {\n        const { clients, players } = store.getState()\n        const { ship } = action.payload\n        const player = CorePlayers.getPlayerByActiveShipId(\n          players,\n          ship.id,\n        )\n\n        if (!player) {\n          break\n        }\n\n        const client = Clients.getClientByPlayerId(clients, player.id)\n        const message = Protocol.shipUpdateMessage(ship)\n\n        // Send updated player state to client\n        store.dispatch(Clients.sendClient(client.id, message))\n\n        break\n      }\n      default:\n        break\n    }\n\n    return next(action)\n  }\n}\n","// @flow\n\nimport { reducers as coreReducers } from \"@subspace/core\"\n\nimport adjacentBodies from \"./modules/adjacent-bodies\"\nimport clients from \"./modules/clients\"\nimport players from \"./modules/players\"\nimport ships from \"./modules/ships\"\n\nconst { loop, physics } = coreReducers\n\nconst reducers = {\n  adjacentBodies,\n  clients,\n  players,\n  ships,\n  loop,\n  physics,\n}\n\nexport default reducers\n\nexport type Reducers = $Subtype<typeof reducers>\n","// @flow\n\nimport * as Hrtime from \"./util/hrtime\"\n\nexport function create(rate: number): () => Promise<number> {\n  const nsPerTick = rate * Hrtime.NS_PER_SEC\n  const hrTimeStep = [0, nsPerTick]\n\n  let previous = process.hrtime()\n\n  function timeoutHandler(done) {\n    return () => {\n      const diff = process.hrtime(previous)\n      const delta = Hrtime.sub(diff, hrTimeStep)\n      const d = Hrtime.sum(delta)\n\n      if (d < 0) {\n        setImmediate(timeoutHandler(done))\n        return\n      }\n\n      done((d + nsPerTick) / Hrtime.NS_PER_SEC)\n\n      previous = Hrtime.add(process.hrtime(), delta)\n    }\n  }\n\n  return () =>\n    new Promise(resolve => {\n      setTimeout(timeoutHandler(resolve))\n    })\n}\n","// @flow\n\nimport { Loop, Physics, Ships as CoreShips } from \"@subspace/core\"\n\nimport {\n  createStore,\n  combineReducers,\n  applyMiddleware,\n  compose,\n} from \"redux\"\n\nimport type { Connection, Server as UdpServer } from \"@web-udp/server\"\nimport type { AuthClient } from \"../auth\"\n\nimport redisConfig from \"../../cfg/redis.config\"\nimport * as Scheduler from \"../scheduler\"\nimport { SpatialIndex } from \"../cache\"\nimport * as Clients from \"../modules/clients\"\nimport * as Ships from \"../modules/ships\"\nimport * as Players from \"../modules/players\"\nimport * as AdjacentBodies from \"../modules/adjacent-bodies\"\nimport reducers from \"../reducers\"\n\nimport type { Store } from \"../types\"\n\ntype ConfigureStoreOptions = {\n  auth: AuthClient,\n  tickRate: number,\n  sendRate: number,\n  udp: UdpServer,\n}\n\nconst physicsDriver = Physics.P2Driver.create({\n  gravity: [0, 0],\n})\n\nconst spatialIndex = SpatialIndex.create({\n  redis: redisConfig,\n  key: \"ss-body\",\n  dimensions: 2,\n})\n\nconst db = {}\n\nexport function configureStore(\n  options: ConfigureStoreOptions,\n): Store {\n  const { auth, tickRate, sendRate, udp } = options\n\n  const scheduler = Scheduler.create(tickRate)\n\n  const enhancers = [\n    applyMiddleware(\n      // Core game loop\n      Loop.createMiddleware(scheduler),\n      // Handles loading of ships and sending model updates to client\n      Ships.createMiddleware(db),\n      // Handles ship actions like thrust, turning, etc\n      CoreShips.createMiddleware(),\n      // Manages spatial index and queries the index each tick\n      AdjacentBodies.createMiddleware(spatialIndex),\n      // Handles loading of players and sending model updates to client\n      Players.createMiddleware(db, sendRate),\n      // Handles authentication of new connections and sending of messages\n      Clients.createMiddleware(udp, auth),\n    ),\n  ]\n\n  if (\n    typeof window !== \"undefined\" &&\n    window.__REDUX_DEVTOOLS_EXTENSION__ // eslint-disable-line no-underscore-dangle\n  ) {\n    enhancers.push(\n      window.__REDUX_DEVTOOLS_EXTENSION__(), // eslint-disable-line no-underscore-dangle\n    )\n  }\n\n  const rootReducer = combineReducers(reducers)\n  const store = createStore(rootReducer, compose(...enhancers))\n\n  return store\n}\n","const zipObject = (keys = [], values = []) =>\n  keys.reduce((a, key, index) => {\n    a[key] = values[index]\n    return a\n  }, {})\n\nexport function object(obj: {}) {\n  const keys = Object.keys(obj)\n  return Promise.all(\n    keys.map(key => {\n      const value = obj[key]\n\n      if (typeof value === \"object\" && !value.then) {\n        return promiseAllObject(value)\n      }\n\n      return value\n    }),\n  ).then(result => zipObject(keys, result))\n}\n","// @flow\n\nexport const NS_PER_SEC = 1e9\n\ntype Hrtime = [number, number]\n\nexport function add(t1: Hrtime, t2: Hrtime) {\n  return [t1[0] + t2[0], t1[1] + t2[1]]\n}\n\nexport function sub(t1: Hrtime, t2: Hrtime) {\n  return [t1[0] - t2[0], t1[1] - t2[1]]\n}\n\nexport function sum(t: Hrtime) {\n  return t[0] * NS_PER_SEC + t[1]\n}\n\nexport function throttle(fn: Function, rate: number) {\n  const nsPerTick = rate * NS_PER_SEC\n  const hrTimeStep = [0, nsPerTick]\n\n  let t0 = process.hrtime()\n  let prevResult\n\n  return (...args: any[]) => {\n    // Get a high resolution diff\n    const diff = process.hrtime(t0)\n    // Subtract a full step from the diff\n    const delta = sub(diff, hrTimeStep)\n    // Convert to nanoseconds\n    const d = sum(delta)\n\n    if (d >= 0) {\n      t0 = add(process.hrtime(), delta)\n      prevResult = fn(...args)\n    }\n\n    return prevResult\n  }\n}\n","module.exports = require(\"@babel/runtime/helpers/asyncToGenerator\");","module.exports = require(\"@babel/runtime/helpers/defineProperty\");","module.exports = require(\"@babel/runtime/helpers/interopRequireDefault\");","module.exports = require(\"@babel/runtime/helpers/interopRequireWildcard\");","module.exports = require(\"@babel/runtime/helpers/objectSpread\");","module.exports = require(\"@babel/runtime/helpers/slicedToArray\");","module.exports = require(\"@babel/runtime/helpers/toConsumableArray\");","module.exports = require(\"@babel/runtime/helpers/typeof\");","module.exports = require(\"@babel/runtime/regenerator\");","module.exports = require(\"@subspace/core\");","module.exports = require(\"@web-udp/server\");","module.exports = require(\"http\");","module.exports = require(\"redis\");","module.exports = require(\"redux\");","module.exports = require(\"sequelize\");","module.exports = require(\"sequelize-cockroachdb\");","module.exports = require(\"shortid\");","module.exports = require(\"source-map-support/register\");","module.exports = require(\"util-promisifyall\");"],"sourceRoot":""}